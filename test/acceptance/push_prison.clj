(ns acceptance.push-prison
  (:require [push.instructions.dsl :as dsl]
            [push.instructions.core :as instr]
            [push.type.core :as types]
            [push.util.stack-manipulation :as u]
            [push.util.code-wrangling :as fix]
            [push.type.definitions.complex]
            [clojure.string :as s])
  (:use midje.sweet)
  (:use [push.interpreter.core])
  (:use [push.interpreter.templates.one-with-everything])
  )


(defn overloaded-interpreter
  [prisoner]
  (-> (make-everything-interpreter :config {:step-limit 20000 :lenient true :max-collection-size 138072}
                                   :bindings (:bindings prisoner)
                                   :program (:program prisoner))
      reset-interpreter))



(defn check-on-prisoner
  [prisoner]
  (let [interpreter (overloaded-interpreter prisoner)]
    (try
      (do
        (println (str "\n\nrunning:" (pr-str (:program interpreter)) "\nwith inputs: " (pr-str (:bindings interpreter))))
        (loop [s interpreter]
          (if (is-done? s)
            (println "DONE")
            (recur (do
              (println (str ;;"\n>>> " (:counter s)
                            ; "\n items on :exec " (u/get-stack s :exec)
                            ; "\n>>> ATTEMPTING " (pr-str (first (u/get-stack s :exec)))
                            ; "\n items on :OUTPUT " (get-in s [:bindings :OUTPUT] '())
                            "\n items on :scalar " (u/get-stack s :scalar)
                            ; "\n items on :return " (u/get-stack s :return)
                            ; "\n\n"
                            ; (pr-str (u/peek-at-stack s :log))

                              ))
              (step s))))))
      (catch Exception e (do
                            (println
                              (str "caught exception: "
                                    (.getMessage e)
                                     " running "
                                     (pr-str (:program interpreter)) "\n"
                                     (pr-str (:bindings interpreter))))
                            (throw (Exception. (.getMessage e))))))))

(def prisoners
  [

  {
    :program

    '[[0.11328125 0.13671875 0.13671875 0.00390625 0.15234375] :complex-liftstack \4 \& (:boolean-intoset \* #push.type.definitions.interval.Interval{:min 12/11, :max 298.7421875, :min-open? true, :max-open? true} #{:strings-conj [\u \i \. \9 \8 \x \4] 343459027M [0.14453125 0.0859375 0.0 0.1171875 0.05078125 0.01171875 0.02734375 0.12109375] ["i%t9V`KFV& .<dAL2" "&h<hg" "XLKR\\.k1=o$(;q8nO" "$Ra=GW:FV,*WrVl:u{7" "u" ";\"i%)([OP_rcA?`" "T"] :b :chars-dup :scalar≤?} [4111 2394 106 4586 2099 3293 260]) :generator-swap [0.0859375 0.13671875 0.13671875] [false false] :chars-build :strings-print :intervals-rotate [0.1328125 0.078125 0.015625 0.01953125 0.12890625 0.1171875] :complexes-cycler #push.type.definitions.complex.Complex{:re 642265960, :im 76.07421875} :strings-as-set :generator-echoall 187.8359375 :intervals-generalize true #{:strings-pop \f :scalars-replacefirst #{:complexes-replacefirst :intervals-butlast [0.046875 0.10546875] :code-length [0.09375 0.015625 0.08984375 0.0546875 0.07421875 0.0703125 0.0078125 0.0859375 0.07421875] 378.14453125 :booleans-liftstack 788768227M} [] #{:snapshot-empty? #{:scalars-intoset :intervals-againlater :snapshot-notequal? :complexes-rerunall :g #push.type.definitions.interval.Interval{:min 159/140, :max 322.1015625, :min-open? true, :max-open? true} false :scalars-dup} ["ZeYQo~R" "n" ";p>he^f}8pAx=" "_rUhPn=ID|KE`"] (17.26171875 :booleans-take [614 4933 1141 984 3451 1528 716 4911] :vector-pop 895677594M) :tagspace-cutflip :booleans-butlast :scalars-flush (#{:snapshot-yank (#push.type.definitions.complex.Complex{:re 338961330, :im 298.5390625} #push.type.definitions.complex.Complex{:re 328472680, :im 57.4296875} #push.type.definitions.complex.Complex{:re 426345252, :im 18.62890625} :complexes-distinct (["<Evo.1Ff*#TWI4qD7" "?" "ei2Q_M3N1?#wt{u"] :boolean-echoall :vector-reverse 163.5234375 :boolean-stackdepth)) #push.type.definitions.complex.Complex{:re 48990740, :im 271.35546875} [\C \f] #push.type.definitions.interval.Interval{:min 48/19, :max 254.6953125, :min-open? true, :max-open? true} #push.type.definitions.complex.Complex{:re 352402824, :im 110.28515625} 115164312 :g} :vector-cutstack :generator-tagstack :refs-pt-crossover :generator-jumpsome)} :chars-butlast [0.109375 0.046875 0.09375 0.13671875 0.125 0.02734375 0.046875]} "^dmSa,@ iIm`}x=gS" false :string-dup :generator-cutflip [0.0078125 0.078125 0.03125 0.03515625 0.0 0.125 0.00390625 0.10546875 0.1171875] :a "Wp&GTF_#:>-|G7;b:z" :chars-swap :intervals-in-set? :g [715 4181 3895 1176 4699 4588] ["U!L\\IIU`T\",#ZO-CHU" "A'sS" "G/Y<*PJ[N3${t:C," "c/IR}fiW"] 349.43359375 true "zyQ(O,P" #push.type.definitions.interval.Interval{:min 92/75, :max 273.1953125, :min-open? false, :max-open? false} [0.07421875 0.0 0.0390625 0.13671875 0.1484375 0.08203125 0.01953125 0.046875 0.0] :scalars-notequal? :vector-vremove :chars-print :scalars-indexof #push.type.definitions.interval.Interval{:min 109/148, :max 233.8828125, :min-open? false, :max-open? true} ["wMa4C.i{CQ(Xa" "M" "GkrHHv4Xq/[KzX&>" "]" "R`hG]U<ouC*crt" "!I?" "}M"] true :intervals-flush :scalars-indexof :vector-length [\f \) \j \h] "z%}CyIVG6" :interval-later (:scalar-infinite? :exec-cycler #{#{:tagspace-scale #{:ref-dump ["G%Ex){R~" "|=:KBoxX5d:" "KrPG$zOgtAk" "V 1" "."] \- :boolean->signedfloat [true] true false :scalar-inc} :refs-flipstack :h :scalar-equal? :booleans-replace :interval-multiply :print-empty?} 485252571M 727260090 318802632 [true true true true] :strings-return-pop 280944427 :vector-refilterall} "k" 56.97265625) true :boolean->string [false false true false false] [4063] #{:complexes-set :ref-dump [] (:tagspace-rerunall 923011500M \% #push.type.definitions.interval.Interval{:min 17/16, :max 97.48828125, :min-open? false, :max-open? true} #{:code-return-pop :code-first :complexes-dup 14/33 :scalars-pt-crossover :intervals-new :log-empty? "zO36dk[H[^RaJ~%D,"}) [0.0390625 0.109375 0.0078125 0.125 0.0] :boolean-shove :j :complexes-vfilter} :e #{278.5078125 :booleans-byexample #push.type.definitions.complex.Complex{:re 296505867, :im 279.5703125} #push.type.definitions.interval.Interval{:min 146/191, :max 208.65625, :min-open? true, :max-open? true} :boolean-savestack [2302 2601 4775 1318 4349 3224 82 3751] :scalars-return :char-digit?} true [0.1015625 0.1328125 0.07421875 0.015625 0.13671875 0.0 0.12890625 0.0 0.02734375] [\_ \B] :refs-cutstack 36796477 #push.type.definitions.interval.Interval{:min 79/180, :max 258.578125, :min-open? false, :max-open? false} #push.type.definitions.complex.Complex{:re 227066492, :im 10.58984375} [512 3279 1863 3763 2513 3470] \J :scalar-storestack :chars-comprehension [0.09765625 0.01171875 0.09765625 0.0078125] :code-if :vector-refilterall (:scalar-empty? :complexes-later [\W \\] :exec-string-iterate [0.11328125]) :complex-swap 53/85 :vector-cyclevector :snapshot-shove :set-tag :strings-liftstack #{:booleans-set :interval-conj-set [0.0859375 0.03125] 629587379M [true true true false false true] 116671208M (#push.type.definitions.interval.Interval{:min 19/30, :max 114.5390625, :min-open? true, :max-open? false} :strings-yank :generator-stackdepth [514 1335] false) 74/181} :complexes-tagstack :exec-tag :strings-return "J-UL{" :c :exec-in-set? [] :set-yankdup #push.type.definitions.complex.Complex{:re 531658332, :im 380.171875} #{[0.03125 0.03125 0.0703125 0.1484375 0.1328125 0.0078125 0.12109375 0.125 0.078125] :refs-generalizeall 67/37 [\) \> \g \1] 223646838M :chars-last :string->set :strings-vremove} 28058893 500896287 :refs-conj-set :strings-indexof [] #{119.109375 [\I \w \]] :complex-shift :refs-equal? :exec-cycler :string-removechar :strings-reverse :strings-byexample} [\X \h \V \5 \( \` \w \] \;] :vector-yankdup 383578013 :tagspace-split [0.13671875 0.09765625] #{47.3046875 true 332.91015625 [\t \h \3 \.] [true true true false false true true] :scalar-power :code-reduce} [0.1015625 0.1171875 0.0390625 0.03125 0.08203125 0.10546875 0.14453125 0.13671875] [0.09375 0.109375 0.00390625 0.109375 0.04296875 0.13671875 0.0546875] :ref-liftstack (:tagspace-againlater :code-tag #{568577172M :scalar-echo ([false true false true false false] :char-shove 13/22 ["VwL_q/}jX;!rHAXe1" "{##&28`^" "yR"] true) [0.0546875 0.08203125 0.046875] \R [0.04296875 0.09375 0.0859375 0.0078125 0.10546875 0.08203125 0.0234375 0.09765625] :vector-comprehension :complexes-first} :exec-k "kXv") #push.type.definitions.interval.Interval{:min 11/63, :max 302.16796875, :min-open? false, :max-open? true} :tagspace-rotate ";\"6,jcB#DHWeiD" 77499511 :snapshot-liftstack (:scalar-sqrt :tagspace-cycler [0.12890625 0.13671875 0.01171875 0.08203125 0.09765625 0.11328125 0.0078125] 509477740M :complexes-do*each) :refs-print 224.87890625 :code-reduce 673124437 \7 :char-echo :char<? :print-space \t #push.type.definitions.complex.Complex{:re 988604305, :im 9.7734375} :g [0.1328125 0.125 0.04296875 0.15234375 0.01953125 0.00390625 0.11328125] :interval-subset? 534871721M :complex-stackdepth :char-tagstack #push.type.definitions.complex.Complex{:re 207659478, :im 23.94140625} :scalar<? "v1},Er" :booleans-length ["Nci8|@rf/R\\Dl8e#^" "Ys,o" "c<Q|%]y8Ft0dQC.I%d" "pV)5okZBjx<H#[L npdU"] :refs-concat :complexes-cutstack :code-flipstack #push.type.definitions.complex.Complex{:re 981002056, :im 80.83984375} :i :char-pop 61.03125 [0.0390625 0.0625 0.14453125 0.0546875 0.125] :scalar-add :vector-fillvector false :scalars-new :chars-yank [\space \s \q \Q] [1253 3638 4097 2446] #push.type.definitions.interval.Interval{:min 143/178, :max 10.828125, :min-open? false, :max-open? true} :complexes-yankdup (:scalars-swap [true] :set-intersection :char-notequal? [\C \, \! \' \ \_ \S \^ \=]) :booleans-distinct 222142898 45/76 :string-take :code-echoall :exec-save :string-replacefirstchar 112.69921875 [0.0625 0.1328125 0.0703125 0.11328125 0.1328125 0.0703125 0.1015625 0.12109375 0.03515625] [\\ \k \, \ \q] :code-append "'3RpTf,6/u" [\u \f \2 \u \space \m \y] :i [\_] :a :exec-laterloop :refs-swap [4797 2908 573 2714 2385 2117 1632 3269 1791] 8/23 :scalars-first #{\F #{[false true false true false true true false true] :boolean-notequal? #push.type.definitions.complex.Complex{:re 954395517, :im 266.91015625} [1717 4182 1597] [0.08984375 0.109375 0.05859375 0.09375 0.01171875 0.140625 0.0078125 0.05859375 0.12109375] false :refs-liftstack 891660324M} :scalars-reverse :chars-last \4 false #push.type.definitions.interval.Interval{:min 37/4, :max 314.7734375, :min-open? false, :max-open? false} :interval-cutstack} :scalar-storestack 316094402M 222.5859375 :vector-cutflip [0.12109375 0.15234375 0.07421875] :char-echoall #push.type.definitions.interval.Interval{:min 4/9, :max 289.93359375, :min-open? true, :max-open? true} :vector-intoset "ZhZ~aZrmkh+8" true :code-insert :generator-stepper :scalar-integer? "xt_" :interval-as-set #push.type.definitions.interval.Interval{:min 79/182, :max 63.46484375, :min-open? true, :max-open? true} :vector-againlater #{155.6640625 ":>e#\\h" :set-superset? [] :intervals-notequal? :string-cycler #push.type.definitions.interval.Interval{:min 113/110, :max 123.78515625, :min-open? false, :max-open? false}} 163.04296875 :intervals-sampler [\c \2] :complex-yankdup 39445895M :scalars-filter #push.type.definitions.complex.Complex{:re 140270049, :im 327.4140625} #push.type.definitions.interval.Interval{:min 129/142, :max 200.296875, :min-open? false, :max-open? true} #{:vector-store [false false true] :scalars-fillvector [] :interval-flipstack :set-equal? 506507022 \\} [\x] #push.type.definitions.complex.Complex{:re 664749747, :im 230.03515625} :complexes-rotate #push.type.definitions.interval.Interval{:min 4/21, :max 167.0, :min-open? true, :max-open? false} :OUTPUT :strings-distinct [] \t [\5 \\ \) \D \k \H] [0.0859375 0.06640625 0.05859375 0.0703125 0.12109375 0.13671875 0.01953125 0.09375 0.109375] (:exec-intoset \O :scalars-replace :i :chars-remove) #push.type.definitions.complex.Complex{:re 307764725, :im 196.75390625} [0.0625 0.12890625 0.08203125] #{253.7109375 ([\C \- \? \: \a \`] true :scalar-ratio? #{163/101 :booleans-items :string-replacechar :refs-againlater \P :tagspace-pop 787541476M :strings-vremove} 352.30078125) :char-againlater [true true] true :boolean-rerunall #push.type.definitions.interval.Interval{:min 98/71, :max 123.484375, :min-open? false, :max-open? true} :string-rest} "HB\\h7<b!_>o}a%-wQZi" :char≤? #push.type.definitions.interval.Interval{:min 133/169, :max 195.06640625, :min-open? false, :max-open? true} ([] [\f] true 456090814 71/121) 2.62890625 430319577M \p :complexes-generalizeall 721043405M :boolean-as-set :generator-reset :booleans-sampler :tagspace-echoall :set-againlater :scalars-reverse :code-tag ["g[/Ji'uru/" "J829ZF,bx" "ozd;_@i`hmAA9ao" "S" "L[k&" "Ts1JoXC" "cgO;$H^&x" "1Q>,l.*eKQp+zk"] (:code-list false :generator-flipstack :string-save true) :booleans-empty? "d\"/" 127/153 [\} \y \V \. \8] [0.15234375 0.13671875 0.04296875 0.10546875] ["4zIO h" "EIb"] #push.type.definitions.complex.Complex{:re 447281046, :im 282.43359375} 339.51953125 \ (#{["[}3fH(LO" "b\\:Co^YHMuF&W" "WZ" "i&" "$T&L3!)H" "ew~0\\vV:X3BW &R/hKE" "-K@g9qlTN;AD\""] :chars-cutflip [\R \K \. \m \J \y] :ref-pop :refs-sampler :scalars-portion [57 3047 384] :boolean-conj-set} #{:scalar-ratio? ["^DBQ \\fC" ":|7):Ws" "62}/Rlq0z0nB" "@k%(=wn!7Gv|YxF0;^" "-1Vf|2RLXI,e/9`|yr" "wV" "`J(2(!h9=t4=<&"] [] #{:generator-rerunall :intervals-replacefirst :string-shatter false :scalars-portion :interval-subtract #push.type.definitions.complex.Complex{:re 478284839, :im 251.890625}} true #push.type.definitions.complex.Complex{:re 74270138, :im 238.328125} [0.1171875 0.00390625 0.03125 0.12890625 0.03515625] #push.type.definitions.complex.Complex{:re 756763627, :im 221.19921875}} :set-notequal? "f%>g&yG\",ZWlB?&3fe" :char-save) :string-stackdepth 533591026M 354.546875 :exec-return-pop :scalars-savestack 169/48 :vector-echo :intervals-return-pop (:b [2611 3996 4556 2987] [1672 4407 4174] :complexes-contains? 775653361) [1782 1728 2492 3131 4503 2889 3444 2598] 403639232 417149947 ".<+wT" #{:boolean-echo [] :complex-in-set? :refs-echoall #{[4266 3993 2207 4801 1742 4525 3029 109 2022] :code-echo :refs-rotate 375080275 [0.14453125 0.1015625 0.08984375 0.0703125] :string-take [355 4914 2403] #push.type.definitions.interval.Interval{:min 107/113, :max 73.7734375, :min-open? true, :max-open? true}} false 915262790M [0.09375]} :scalar-bigdec? :vector-flush [true true false true] :booleans-intoset true [] #push.type.definitions.interval.Interval{:min 169/45, :max 139.37890625, :min-open? true, :max-open? true} :scalars-items :string-yankdup [] 920011290M :h ["ci^+dJ[^Y&[(.He)]{T" "O/I}rE\"kT" "e@b?=M[.Mm:" "a" "Csq#N$Fl0,rwb*a" "]h,?r[-EVv3dq" "UKAyMjnvTbM=2>~`x!" "eDD]aVw4w5"] [true true true true true] ["Qnlu:IoU,nCu','x5%" "btk5oA7Xd3MN} BZ" "738ipo*[&F~]" "x|KX'M" "=D~" "}|lvT6" "iCK_D},k(exlP{KD"] #push.type.definitions.interval.Interval{:min 119/160, :max 226.75390625, :min-open? true, :max-open? false} :chars-occurrencesof :generator-echoall :strings-nth :code-insert 445348410 :ref-tag :boolean-stackdepth :scalars-as-set :scalar≥? [1090 3856 3714 3349 2208 4802 688 2984 4535] 1/23 580776758M :char-print #push.type.definitions.interval.Interval{:min 29/175, :max 379.484375, :min-open? false, :max-open? false} [false true false true true true] :strings-cyclevector 15.57421875 :intervals-replacefirst :scalars-contains? :scalars-vremove 830512489M \! \m :exec-stackdepth #{:complexes-vsplit :boolean-stackdepth :scalars-last true :g [\` \O \O \? \J \;] :scalar-stackdepth #push.type.definitions.complex.Complex{:re 323050323, :im 222.546875}} #push.type.definitions.complex.Complex{:re 947792229, :im 94.734375} #{:strings-store :chars-againlater \) :vector-do*each [false true true true false false] :tagspace-yank [true false true false] #push.type.definitions.interval.Interval{:min 131/132, :max 330.8125, :min-open? false, :max-open? true}} :char-return-pop :scalars-equal? :boolean-notequal? :chars-rest [false] [3634 4005 4734 2897 1039 1558] [\o \O \9 \Y \c \. \1 \J \<] :booleans-comprehension [0.08203125 0.06640625 0.03515625 0.08203125 0.125 0.03515625 0.125 0.1015625 0.09375] [true false false false true false] [true false] [] :scalars-do*each "lHV(c~*NJ" :scalars-cyclevector :intervals->set 200.15625 :interval-stackdepth (#{["!*$Z&bsWtn'K\"9;,}" "rtKiZ}^PpJ'~|]j.kHm" "^[0x$.5)ZZr\\AC0" "ri'MRsQ,W\\"] :scalars-shove :intervals-againlater :complex-yank "<+g,o" :scalar-flipstack #push.type.definitions.complex.Complex{:re 482704727, :im 191.32421875} :complexes-concat} 369532780 false :vector-concat (:scalars-build :chars-fillvector \S 179925658 :set-flipstack)) :string-print 665435335 778545009 [3971 4091 1813 3084 1500 4800 986] true #push.type.definitions.interval.Interval{:min 105/148, :max 28.91796875, :min-open? false, :max-open? true} 191/168 :complexes-fillvector :refs-shove :chars-storestack :push-quoterefs [] (:exec-save 904375518 false :exec-conj-set 511961429M) 34.1015625 [\y \' \2 \e \$ \| \=] :ref-cutflip [\9] (:exec-when :intervals->set :push-unquoterefs [\& \E] :code-contains?) :exec-while 222.8671875 :intervals-return-pop #push.type.definitions.interval.Interval{:min 36, :max 299.0625, :min-open? false, :max-open? true} [] :complex-cutflip ["YW~m=GH1X-fG=J'E^" ">50" "R" "\"Tj|=lh" "%zsuCUGbGPT;q<#" "A\"l**EJ>*!;n j" "#x!i" "lWh.9V:)0;y}Qt3}a;%"] :string-tag #push.type.definitions.interval.Interval{:min 10/23, :max 66.02734375, :min-open? false, :max-open? true} false "@" :chars-first [0.140625] :complex-shove 415065272 "i_2hbE0d;2(SSG'T" :generator-cutflip :vector-notequal? :chars-comprehension :booleans->set true true 912221852 #{:exec-return-pop (44/175 (#push.type.definitions.interval.Interval{:min 61/82, :max 52.98046875, :min-open? true, :max-open? true} :complex-yankdup ["}jMev?zz2cTyor*@P" "OBo" "!)/I/~l&wD<{tPme" "6_{{gd-*7j~T" "KV`a\\GoF!K8fr" "&C5[&HIVvy/R$a" "Y?9flp)wf%"] [true true true false true true true] [3832 3556 4743 3598 4977 3204 1216 2082 2642]) :code-contains? \9 :vector-later) :code-cutflip 976826559 #push.type.definitions.interval.Interval{:min 193/65, :max 256.41015625, :min-open? false, :max-open? true} :strings-return-pop ["g8h/M\"bj\"QXqt" ":;F\"sol:-o\\MvYs" "7Z>" "ogFB$gsSxz" "o8"] :scalar-float?} ["]>2'FnW[" "Ot8" "8T" "zYUdtdG+^zUk" "*nWf/@@~28%{i%?X/" "4Z${W" "7/UO[?~Pw+gQxq@3" "x<G/a#C1-\"(" "'$3AzG"] 211868147 false \l :code-map :set-againlater :string-yankdup \m ["P!7Tw"] [] 938169777M :strings-cyclevector :snapshot-empty? :d :string->tagspace :j 215633711 :refs-dup :c :interval-print :vector-againlater 186/53 #push.type.definitions.complex.Complex{:re 93758936, :im 25.8515625} 853377927M :d :complexes-pop [false true true false true false true false true] :push-nthref :vector-cycler :tagspace-lookupscalars [false false true true true] 641025665M \g :vector-butlast :char-cutflip :set-difference :booleans-contains? :intervals-flipstack 18.04296875 148390460 \& :tagspace-cycler "+$b72v?[-$enb" :refs-vsplit [\g \D \I \5 \space] :string-shatter :e :ref-rerunall :booleans-portion 115/141 :booleans-yankdup ["yX4;D" "?\\+SUht$_pqgE@w&3R" "N(" ")@~&EPUF" "(Al[oU4(|" "SKMYc+" "-" "cGYq" "&arNwNaE\"B<YNl9"] :strings-flipstack \q true true :intervals-conj-set 778637417M [0.0859375 0.12890625 0.07421875] :string-pop \? [] #push.type.definitions.interval.Interval{:min 77/3, :max 43.34765625, :min-open? false, :max-open? false} (:intervals-return-pop :scalar-dup :exec-swap :char-swap :scalars-yank) #push.type.definitions.complex.Complex{:re 150125817, :im 300.671875} :strings-cyclevector :f 670826878 :code-pop #push.type.definitions.interval.Interval{:min 98/65, :max 308.77734375, :min-open? false, :max-open? false} 61/136 :integer-totalistic3 :scalar-stackdepth :chars-replacefirst 858467887M :scalar-swap #push.type.definitions.complex.Complex{:re 531155678, :im 314.171875} [0.078125 0.14453125] :boolean-xor :booleans-replacefirst [0.00390625 0.0234375 0.046875 0.078125 0.12109375 0.15234375 0.1484375 0.13671875 0.0546875] 110/109 :interval-tag \ ["&Jp<t+V2L5SSfG7Lv" "h}6)TLV~6 U" "__Bvjk/%v%Fc4p" ";+4)\\mB7VFje" "#F1" ")n@.I" "r{.ol<qieQ@m*p)urF" "Bm|Vn(gP:aaW)$d\\j1"] #push.type.definitions.interval.Interval{:min 121/17, :max 226.89453125, :min-open? false, :max-open? true} :booleans-indexof (:string-rerunall false [0.0703125 0.0078125 0.11328125 0.046875] "W:bG|c$j`uAxv_0&/8" "#*p") :tagspace-stackdepth #push.type.definitions.interval.Interval{:min 148/189, :max 218.4296875, :min-open? false, :max-open? true} false "u`VdI" [false false false true true true true] :chars-shatter #{115.7890625 #push.type.definitions.complex.Complex{:re 921488225, :im 350.3671875} true :chars-return-pop #push.type.definitions.interval.Interval{:min 7/8, :max 236.359375, :min-open? true, :max-open? false} (:complexes->tagspace 77/61 :strings-reverse :intervals-nth [\i \6 \| \u \P \D]) 303454114M :intervals-vsplit} "i@30`aSjs\"|F" :complex-return-pop :refs-notequal? :generator-stackdepth :exec-yank 255528193 :strings-storestack [2853 2076] :a #push.type.definitions.interval.Interval{:min 153/29, :max 258.15234375, :min-open? false, :max-open? true} ["WC}@\\" "4S'9T@DM[kaT+5VbV" "/J-kqEG" "~wq:>y~" "?z:+ay,!A3[lPoL5C!5"] [true false false true true true] :intervals-byexample :exec-k true (:chars-return :scalars-cycler ["_" "8+?w4" "z,|y" "@/.+x!nEzO<a" "t$Ue$i4/B5eY/F7d~"] :snapshot-tag [true false true true]) true :boolean-return [false true true] #push.type.definitions.interval.Interval{:min 16/191, :max 257.171875, :min-open? true, :max-open? true} :tagspace-storestack 119493734 #{#{302.359375 3/70 #{:scalar-storestack :booleans-cycler :refs-flush 3/142 "b+sCA&|" \6 :tagspace-print "\\?fgO`y~K5\"_H^q?"} #push.type.definitions.interval.Interval{:min 37/170, :max 368.55859375, :min-open? true, :max-open? false} [4459 2475 2370] :complex-return-pop :vector-return :interval-shove} 369.14453125 #push.type.definitions.complex.Complex{:re 573196409, :im 329.02734375} :chars-emptyitem? :chars-conj-set false [false] #push.type.definitions.interval.Interval{:min 7/11, :max 110.44140625, :min-open? false, :max-open? false}} :tagspace-cycler :intervals-liftstack 24.75 :complexes-storestack [2514 4736 1516 4097 3785 3894 1742] true :booleans-pop :refs-cutstack :interval-crossover \, :string-solid? [0.09765625 0.03125 0.140625 0.03515625] 32/37 [\ \z \0 \j \* \I] 444803401 [3233 3103 3023 4890 606] [3726] 176.30859375 #push.type.definitions.interval.Interval{:min 39/61, :max 259.4609375, :min-open? true, :max-open? false} :vector-echo :log-stackdepth true [0.08203125 0.046875 0.109375 0.09375 0.05859375 0.078125 0.01953125 0.046875 0.15234375] #{:boolean-echo 55190781M 164664922M :generator-swap #push.type.definitions.complex.Complex{:re 93698999, :im 335.86328125} 153/11 false 374883436} 366254666M false 139190096M :code-do :a 111/169 :snapshot-flush [true true true true false false true false false] "6" 330.9296875 #push.type.definitions.complex.Complex{:re 355863324, :im 260.39453125} :code-cutflip :scalar-complexify #push.type.definitions.complex.Complex{:re 634970386, :im 162.2265625} "xlO9?kqsp{^XJx$D" [false true true true false true true false false] :a :booleans-generalizeall :scalars-flipstack 852426528M :scalars-as-set \l 284.41796875 #push.type.definitions.interval.Interval{:min 175/92, :max 380.0703125, :min-open? false, :max-open? false} :interval-yank 58/133 46/49 :refs-vsplit #push.type.definitions.interval.Interval{:min 2/25, :max 124.03125, :min-open? false, :max-open? true} :strings-sampler :tagspace-filter :vector-tagstack [1601 4935 1757] :booleans-store 779264336M :char≥? true :refs-storestack :d :complex-echoall 319.40625 #push.type.definitions.complex.Complex{:re 684019470, :im 17.78125} #{#push.type.definitions.interval.Interval{:min 143/28, :max 10.12109375, :min-open? true, :max-open? false} :scalars-tagstack :chars-concat #push.type.definitions.interval.Interval{:min 5/17, :max 269.7109375, :min-open? true, :max-open? false} :ref-notequal? :char-uppercase? #push.type.definitions.interval.Interval{:min 193/162, :max 284.33203125, :min-open? true, :max-open? false} :complexes-stackdepth} [793 1272] :generator-echoall :exec-return-pop 460262889 :set-againlater 944597399 (\@ :ref-return-pop :scalar-many :generator-storestack :complexes-flipstack) :interval->set :interval-cutstack :OUTPUT 181/84 #{["qqQtZS!w0Y;,JEx"] :snapshot-cutflip :vector-replacefirst 305.13671875 #push.type.definitions.complex.Complex{:re 134553877, :im 163.63671875} false :scalars-remove :vector-later} #push.type.definitions.interval.Interval{:min 97/76, :max 61.01953125, :min-open? false, :max-open? true} :set-conj-set [] [\q \` \@ \~ \s \"] (true :complexes-vsplit :interval-return-pop :tagspace-tag #{7/97 [667 4311 4028 4104 48] :intervals-tagstack (:exec-later 915113888M :push-storeARGS 19/34 :complex-rerunall) :refs-storestack #push.type.definitions.interval.Interval{:min 83/47, :max 183.92578125, :min-open? false, :max-open? true} :char-as-set :d}) [0.10546875 0.13671875 0.046875 0.03125 0.09765625 0.0625 0.08203125 0.09375] :intervals-replace #push.type.definitions.interval.Interval{:min 53/41, :max 282.09375, :min-open? true, :max-open? false} :generator-yankdup #push.type.definitions.interval.Interval{:min 159/194, :max 83.078125, :min-open? false, :max-open? true} :intervals-generalizeall :scalar-ceiling 349471244M 57/37 #{:booleans-byexample :code-sampler ["6DGj--N8Aw^*j>" "lC]~dd2" "wc5z:j/NOQ8" "4G{I_djaY)o4]dfm5" ":2{2>IxX2t`" "wD.)*#//R"] :intervals-last #push.type.definitions.complex.Complex{:re 818874422, :im 187.859375} :exec-store ":fFhjL}\"K)0-f#Q" :char-flipstack} 344.203125 :scalars-generalize #push.type.definitions.complex.Complex{:re 493683066, :im 211.7890625} :snapshot-flipstack [\g \F \8 \> \` \y \0 \A] true [true false false] :a :string-comprehension :string-save :chars-vremove :complex-dup false :complex-flush ["3r_(hmjsV|Qi[vS7g>" "*k\\" "kcP};q" "]q/xqisl2gfE" "-i5:D,bSBH" "MKpuIIfC" "sW_*\\$mDsX" "8" "82"] ["pR^`"] :chars-stackdepth :boolean-cutflip :code-dup (59/153 :refs-echo :generator-return-pop true 380.66015625) #{104/45 :scalar-dup :exec->string :booleans-take :interval-recenter [false] [0.1484375 0.12109375 0.02734375 0.05078125 0.01171875 0.08203125] "WE"} :e ["}K|czXGLs85 ([>+" "<<),,n[!@,K" "Hq-oTfS8Ymbra" "J]VVa=Am|%2;o" "\\^}QK1v7" "~t|4>3,3G10kR" "\"!-YCuQG@1-3w`Os"] 286.48828125 :h 100.1484375 289399644 :code-flush \F :strings-replace "tTlk" 70446530 :chars-fillvector :strings-build :tagspace-store :booleans-tag :string-rerunall [true false true false false] :complexes-return #push.type.definitions.complex.Complex{:re 258083302, :im 259.18359375} [29 664 3427 4665 3998 3554 1767 3254] 101.65234375 :code-append :complexes-build :j [true false true true false] [true true] :set-in-set? true :scalars-tagstack :ref-in-set? \2 ["(Cv" "nu>F/r,h@[wm" "Q.K[w$O,HWCID$:>pif" "bL" "*x$mzsp^c21F" "KWf^P6h_~Ry]" "SmB8/?#O%DDkn" "Zq]#12?49ij;D^r1>"] #push.type.definitions.complex.Complex{:re 837209654, :im 314.72265625} :scalars-distinct [\t \; \t \L] :refs->code :complexes-new :refs-take :string-occurrencesofchar #push.type.definitions.complex.Complex{:re 329546639, :im 132.328125} :code-cutstack :char-return :e :snapshot-empty? :chars-rerunall :scalars-comprehension 97/70 131/19 :intervals-pop :refs-stackdepth :complexes-reverse :scalars-later :i [0.0234375 0.0625 0.01953125 0.0703125] \9 :tagspace-tidy #push.type.definitions.interval.Interval{:min 31/30, :max 72.98828125, :min-open? false, :max-open? true} :refs-save 633660641M :generator-rotate true 135.90625 #push.type.definitions.complex.Complex{:re 687903087, :im 232.6875} "*VxceC" :complexes-rest \/ (127.31640625 :complexes-flipstack :g :tagspace-cycler #push.type.definitions.interval.Interval{:min 198/85, :max 282.38671875, :min-open? true, :max-open? false}) :interval-newopen "F," true :refs-savestack 133.33203125 (:refs-vfilter (:c :scalars-sampler [\{ \< \P] #push.type.definitions.interval.Interval{:min 32/95, :max 320.09375, :min-open? false, :max-open? true} 57/155) #push.type.definitions.interval.Interval{:min 2/81, :max 233.03515625, :min-open? true, :max-open? false} "'k:Q>gp5Is=[" :vector-comprehension) true ((:complexes-later :chars-conj-set "z{>8nt{e2ew" 444381772M [0.015625 0.05078125 0.01953125 0.08203125 0.0078125 0.12109375 0.0546875 0.07421875]) :complexes-byexample :booleans-concat true :tagspace-valuevector) 89369206M :chars-againlater :strings-cyclevector :strings-rerunall :f 28/117 [false true true true true false false true false] (:ref-cutstack :chars-contains? "'|*a$*(EfMK5" [] #push.type.definitions.interval.Interval{:min 25/63, :max 194.84765625, :min-open? true, :max-open? true}) :tagspace-swap :j :booleans-as-set :generator-cutstack :tagspace-scale :g [] [\7 \; \T \& \ \r \ \) \?] [\" \x \i \5 \space \(] :code-position :intervals-equal? :scalar->char :scalar-bigdec? :chars-shatter :scalars-swap :intervals-tag 190803708 47.46484375 "4V %%X" false [3746 1243 4988 3344 4337 4745] [\q \* \f \) \= \h] :exec-shove "jmOJG=4uNO(" :scalars-yankdup :snapshot-stackdepth :OUTPUT :code-liftstack :interval-equal? 812446659M \q \K ["\\W" "sS$YK8-_,417$F" "1qx%F:r5fUm" "&.P>r0*$KIKSLjA+cd+x" "dB" "(As\\qU9bN@qJ|lE" "B2" "!!B'S"] :booleans-equal? :booleans-first :string-liftstack 776360704 [3932 4951 374 4022 2669] :complexes-as-set :refs-dup :complexes->tagspace :refs-stackdepth :vector-refilterall :exec-yankdup #{[\s \q \M \> \~] 165/74 false :complexes-conj :scalars-flush :scalar≤? :intervals->tagspace 73081997} \U :strings-save \c #push.type.definitions.interval.Interval{:min 8/95, :max 18.03125, :min-open? false, :max-open? true} :string-replacefirst :char-echo :string-cycler :scalars-stackdepth :refs-liftstack true true [0.12890625 0.07421875 0.1171875 0.09375 0.109375] 258.4296875 :interval-swap :strings-remove 21/10 :booleans-cyclevector [3120 2030 1735 4923 2361 4761 353] #push.type.definitions.interval.Interval{:min 88/83, :max 269.83984375, :min-open? false, :max-open? false} :strings-sampler #push.type.definitions.interval.Interval{:min 50/19, :max 294.7265625, :min-open? true, :max-open? false} \o "K,GlL]N+of" 489275363M :scalars-filter [\z \' \d \$ \n \6 \}] ["$jL&rV_wOeH$" "dy}yF" "?=kpF" "_L:V"] :scalar-storestack :strings-reverse 429176277M false :vector-storestack ["13';f)4" "B<Ug.a2" "CGB_%Tc" "5x\\3V[Xl.PE]<" "6~bW" "hl@uO)h):|<\\" "4&N:Z$tp-g]d5k3QGs#" "$b]+R_/m^zc6<"] :j true 1/5 291969632 178/29 [0.0390625 0.046875] [false true] 249.94140625 :complex-echo [\space \Q \O \x \^ \( \n \f] \- :float-uniform \o "^3" :interval-savestack #push.type.definitions.interval.Interval{:min 83/89, :max 167.95703125, :min-open? true, :max-open? false} :g [] :code-dup #{\@ 221.29296875 \a :char-pop [] :tagspace-store :i :char>?} :vector-conj-set :refs-rotate #push.type.definitions.complex.Complex{:re 666949607, :im 374.40625} :boolean-pop [true true false true true true false] :refs-swap #push.type.definitions.complex.Complex{:re 201471905, :im 85.66796875} :intervals-vfilter [] 979211908M :scalar-dec #push.type.definitions.interval.Interval{:min 17/41, :max 123.38671875, :min-open? false, :max-open? true} #{#push.type.definitions.interval.Interval{:min 157/42, :max 275.09375, :min-open? true, :max-open? false} [] [0.09375 0.0625 0.11328125 0.140625 0.02734375 0.13671875 0.12109375] ["(c<p[L}nr-" "T}qZ.KH3%OsZW:6-r" "X)ZbjSOui|+ErhqwF" "<>A|X7"] [1246 3582 728 2966 4951 3586 1349 3939 2022] :vector-nth :code-do 95/32} :boolean->signedfloat :b :boolean-yank :chars-cutstack :vector->tagspace :refs-build :scalars-print [false] #push.type.definitions.complex.Complex{:re 412825391, :im 7.80078125} :interval-min #push.type.definitions.complex.Complex{:re 718618177, :im 61.0625} :booleans-last [] [\w \v \' \# \U \T \4] :scalars-set 855129444M :d :intervals-stackdepth false \^ :error-stackdepth :scalars-cutstack :code-yank [0.01953125 0.08203125 0.10546875 0.12890625 0.07421875 0.08203125 0.0703125 0.046875 0.03125] :b 433559845 :strings-rest ["pcpa$Ts{hy" "VxP*G7+" "}xz_PI(:]/O]9ld;dM" "ZtyP'?&[W1M4Vqcx&" "sXv6gr<tP+~bsp\\" ".OI#)BgnW\"^GX=3AN" "w+R+}Uzlz\"H2BwX)" "yy{y7LVRtB"] :scalars-shove :snapshot-stackdepth :interval-pop "(~5T,w+9'0F7t+7l" "D(Z" :interval-againlater :boolean-empty? 98.35546875 :complexes-shove :booleans-cycler [] :f [true] [",QgMch*.C WQDF" "m" "l#\"k]Bmb" "OXwWII* 61" "?srH" "y7e'w .Pqn]F|dd%A" "GdP<^7v+`f2kk"] #push.type.definitions.interval.Interval{:min 113/200, :max 293.46875, :min-open? false, :max-open? false} [0.00390625 0.0859375 0.0234375 0.05078125 0.0234375 0.0546875 0.14453125 0.03125] 22.70703125 :chars-do*each [2742 3447 34] true #push.type.definitions.complex.Complex{:re 513178499, :im 237.984375} :interval-swap :snapshot-tagstack :vector-cutstack [true true true false false false] #push.type.definitions.complex.Complex{:re 248065954, :im 343.61328125} :vector-echoall :exec-yankdup :generator-pop :strings-dup :snapshot-storestack 441516267M [] :scalar-ln1p [4231 4722 4218 4249] :boolean-stackdepth [] :chars-againlater [0.09375 0.1171875 0.0 0.09375 0.0234375 0.1171875] 133156498M [true false true false false false false] ["'2X>zmd+s77*" "K" "u,FR {!e%sVRI}`EI~\"D" "1~T*)dB38" "7G>at?>spj*=M =^w\\" "MY)u_I~6~\"R&%FX~" "r" "4qUS6*v&LMPGN76w5" "=_V/m3J8zs'<CiDZFw{"] [true true true false] [false true false] [0.12109375 0.09765625 0.125 0.08984375 0.09765625] :intervals-tag (:complexes-cutstack :code-quote 398643151 :interval-as-set "Ae5)mVdTzu") :interval-rotate [\v \u \( \Y \1 \,] 343.50390625 [false false true true false false true false] :intervals-new 6445054 [] #push.type.definitions.interval.Interval{:min 35/39, :max 194.96875, :min-open? true, :max-open? true} \" 59/98 #push.type.definitions.complex.Complex{:re 544606503, :im 114.12890625} ["@Qds%`]>p5#8@" "#" "UE*%cW0\"BI=:?" "B" "<+7t_9" "R/M~bew@S"] "MVWj'AP6>._8X|4iO" [2865 2057 2814 2671 4499 4855 3520 4286 2688] :boolean-flipstack 72/133 235.0703125 :c :scalars-cutstack ["fQ,G" "a%UF/W\\@ea7n" "^.k'xcQpxF" "(" "&l4i&qDN}" "C" "Lv; 0'" ")W8\\}Y<" "!V"] #{\C \% #{:scalars-tagstack 464990803M :strings-nth :interval-shift :strings-print (#push.type.definitions.complex.Complex{:re 46724732, :im 95.2265625} :booleans-take "%fBz7c{;?x[n" :vector-cutflip :string-removechar) ["*m{ydPc`/U" "|yXn#uHK{/Z6HkHBj3U:" "NS!<+xb/0C=n\\9"] :a} true :code-conj-set :b "G7?WABH" :complexes-as-set} ["rdh" "7WreQ8a8B*m++[~E*|`M"] :g :scalar-complexify :scalar-flush 552928740M :set->code :complex-infinite? :tagspace-rotate :scalars-shove :string-tag :scalars-conj-set 265399600M :char-rotate #push.type.definitions.interval.Interval{:min 175/159, :max 316.5390625, :min-open? true, :max-open? false} [false false true false true] true #push.type.definitions.complex.Complex{:re 258617897, :im 157.95703125} 65/6 :scalars-vfilter :intervals-indexof :booleans-last :strings-indexof :OUTPUT [0.0234375 0.125] :interval-flipstack \i :boolean->string :complexes-rotate :strings-print \l :scalars-tag false :e :string-intoset "3if}sDho-c4I~)f/@)HL" ["g" "4Xa't/j^!VfP0X%Kc\\" "Ez(p1,pr/3" "Dhq" ":2@0Mp" "8~!\";C*" "{n\"K*Wq" "R)Y~A(Q>U\"0(96fk;0" "X<=wTiP^1T,"] ": aq 3\"e8T\\qo7" :complexes-storestack :scalars-conj \& ([] #push.type.definitions.interval.Interval{:min 47/68, :max 170.33984375, :min-open? false, :max-open? false} [\o \5 \6 \# \9 \> \@] [0.1484375 0.1171875 0.05859375 0.14453125 0.03515625 0.1171875 0.140625] "jsIq`<h\"r1O)~") :char-return :set-againlater "G^(~-F-qPL" :exec-string-iterate :char≥? (#push.type.definitions.interval.Interval{:min 27/10, :max 117.8203125, :min-open? false, :max-open? true} :strings-cycler [\ \ \. \+ \% \:] :complexes-replace :intervals-intoset) :intervals-vremove :snapshot-flipstack :scalar-arctangent :generator-next :scalars-pop 497449892 :refs-comprehension \K 688642608 [4458 4253] ["NG4&g*c6_k3{1" "5LF#L*dULmxfU8*!PM" "r" "%Ra*v+Y?vG\""] #push.type.definitions.interval.Interval{:min 83/18, :max 55.359375, :min-open? false, :max-open? false} [0.08203125 0.09375 0.0859375 0.0078125] :scalar-cosine :code-save 960347455 false #{[0.0234375 0.1171875 0.12890625 0.0 0.09765625 0.03515625 0.06640625 0.1328125] [true] :char-stackdepth true [\r \j \Z \V \M \c] [false] [0.0859375 0.05078125 0.06640625 0.0546875 0.07421875]} \W :float-uniform [false false false true false false true] :chars-rest [false false] :tagspace-rerunall 91/198 (:scalars-nth :c [] :scalar-intoset false) :strings-return :f #push.type.definitions.interval.Interval{:min 32/31, :max 72.01953125, :min-open? false, :max-open? false} :exec-shove (:e :booleans-store :refs-portion "(" :booleans-save) #{:char-flush (:scalars-fillvector #{#{98/65 #push.type.definitions.interval.Interval{:min 102/137, :max 211.859375, :min-open? true, :max-open? false} \) (["l,}KDW(F" "iu-}9$Qp-"] :boolean-flipstack [true] 657041920M false) 505030226M [4756 981 3237] :exec-return :strings-butlast} "Jc'O6ah88H" :code-contains? 672837368M :set-dup false ["6aV@ib" "OV_o*r83g&UL_>txAP" "92XgTf" "<r0X0\\R&hSy%W)!d" "H=<H" "$hctrV}apV`" "DV$v6C" "J4e+]kf" "CO mfJ|bt>ub=6"] #push.type.definitions.interval.Interval{:min 6/41, :max 55.71484375, :min-open? true, :max-open? false}} :set-empty? [\b \o \U \@ \F] [2537 3281]) :chars-byexample :generator-liftstack #{188.52734375 \h 507542374 :interval-storestack :scalar-rotate :booleans-tagstack :code-tag :scalar->boolean} :intervals-swap [0.1015625 0.078125 0.1015625 0.01171875 0.04296875] 218955617M} :vector-pop 33/25 :complex-echoall :refs-tag [true true false false true false true true] :complexes-indexof :complex-in-set? :scalar<? [false false false true true] 901047101 :OUTPUT [false false true true true false true false true] :refs-conj \n :set-yank #push.type.definitions.interval.Interval{:min 7/37, :max 62.984375, :min-open? false, :max-open? false} [true false] 105/46 :boolean-in-set? :generator-reset 309.4921875 :boolean-echoall true "6AYY" \( :complexes-return :complex-rerunall :vector-contains? :refs->tagspace [3681 2749 637 4083 609 4785 1962 3527 4446] (:scalar≥? :complexes-contains? :ref-peek "]B6Bu" "\"~>WFZkPrJB?tmYjH") :complex-zero :scalar-ceiling :complexes-rest :complexes-tag [1400 1266 713 3951 4102 2497 861 834 783] 637785822M 92.8828125]



    :bindings

    '{:OUTPUT (), :e (("SS'Ud<_tScL" :char-yank 458368767 #push.type.definitions.interval.Interval{:min 41/35, :max 132.3125, :min-open? true, :max-open? false} [] :vector-first #{:code-in-set? #push.type.definitions.complex.Complex{:re 525253788, :im 288.5546875} :booleans-return :booleans-butlast 75/37 :refs-flipstack ((:interval-tag [\O \B \y \& \m \A \/] false [4483 4720 2937 3627 2814 1609 1236 4654] #push.type.definitions.interval.Interval{:min 37/66, :max 62.9140625, :min-open? false, :max-open? true}) [] :intervals-return-pop :tagspace-keyvector :complexes-cutflip) :set-later} #push.type.definitions.interval.Interval{:min 79/29, :max 173.640625, :min-open? true, :max-open? false} :intervals-pt-crossover :scalars-first)), :g ((861019862 :char-storestack "+^?<ZGt.!LJ<h Sc" false (["BVX O" "u\"aA-t#*\\5b\"s:bK" "<]" "2I-fDJt;L}1" "L#4\\f`:RC E0K$$D" "Ad9ud"] :complexes-remove :char->set 772643367M) \" :booleans-shatter [\T \c \d \N \% \O \N] [3968 2084 1658])), :c ((:code-quote :chars-return-pop #push.type.definitions.interval.Interval{:min 151/72, :max 300.1796875, :min-open? false, :max-open? true} :exec-return :scalar<? :interval-rerunall :set-as-set :tagspace-save #push.type.definitions.interval.Interval{:min 31/63, :max 150.375, :min-open? true, :max-open? false} \c)), :j (((#push.type.definitions.interval.Interval{:min 87/10, :max 251.59765625, :min-open? false, :max-open? true} \a :chars-generalize :intervals-stackdepth ["Au" "\"p" "G@s\\yU^el" "{{Gl*!01B|Lk[A:B$T" "8IB*nOss6:Uy<5Z1.E%" "Q>Gq[bzb@>4+!"]) 356.8828125 :strings-stackdepth :char-pop :complexes-liftstack 182.078125 "2F1P9'V" 186983093 true true)), :h ((:ref-rotate 449954022 :chars-reverse :generator-reset :boolean->float :tagspace-tidy :exec-string-iterate false #{#{56.73046875 :exec-intoset [\ \c \A \G \r \G \x] (282587978M [0.078125 0.09765625 0.0 0.0859375 0.125] #push.type.definitions.complex.Complex{:re 490261957, :im 155.2109375} :refs-flipstack [false]) :chars-last :code-do*count "l"} :snapshot-shove true 369.62109375 [\j \p \G \T \2] :complexes-vfilter [false]})), :b (((":22@_9" 437562371 :refs-build ["&(zfJ^D4XNHr+UI" "<^4_f?jlSgLy./<b\\"]) :ref->vector :generator-return-pop #{"Hun" #{(:string-save :complex-make :complex->code ["Ehy$<8 r~vr2dY.\"k" "Hu>Y@f" "b>_z\"`vL}@\"r" "/zV!RdFm" "UI{f`" "F_R$B?G" "y_\"NIz\"~" "%/R"] :complexes-print) [] #push.type.definitions.interval.Interval{:min 13/54, :max 268.70703125, :min-open? false, :max-open? true} :refs-save :refs-set :push-bindingset :strings-contains?} #{812223008M :vector-butlast [false true true false] 9/4 :scalars-reverse :scalar-bigdec? :generator-storestack [\& \I \i]} :complexes-cutstack :interval-notequal? 163/9 :ref-cutstack 435865571M} :vector-remove #push.type.definitions.interval.Interval{:min 63/187, :max 141.2421875, :min-open? false, :max-open? true} :interval-new :string-cycler \)), :d ((:complexes-generalizeall false :code-do*range :char-dup :refs-store #push.type.definitions.complex.Complex{:re 531146074, :im 166.90234375} 693346380M 328.0859375 [0.10546875 0.12109375 0.01171875 0.05078125 0.10546875 0.1171875])), :f ((394074677M :complexes-portion :ref-intoset :strings-cutflip 544522865M 1/3 1/3 :booleans-swap #push.type.definitions.interval.Interval{:min 71/7, :max 119.3828125, :min-open? true, :max-open? true} "g'O9bDo 8AD2;F9")), :i ((:refs-build \i [\R \F] :scalars-set :scalar-in-set? :string->chars :string-storestack :scalars-nth [\$ \= \i \) \s \K \E])), :a ((367.76953125 91/48 :refs-flipstack [")"] :scalar-sign :booleans-againlater 628257254M :complexes-tagstack [0.10546875 0.0625 0.06640625 0.15234375 0.15234375 0.11328125 0.1171875 0.0234375] :refs-length))}


}

  ])


(fact "no exceptions are raised when I run any of these problematic programs"
  :debug :acceptance
  (map check-on-prisoner prisoners) =not=> (throws))
