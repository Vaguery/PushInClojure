{:error nil, :program [\s [10.06939444610505 15.846515334219333 -18.896614803881207] :strings-reverse -35 \| #push.type.definitions.complex.Complex{:re 2, :im 1/3} #push.type.definitions.interval.Interval{:min -326, :max 86.24432710795168, :min-open? false, :max-open? false} -15 :interval-reflect :scalar-log10 -41 [14.40808588229271 30.898873103415326 -29.377718851701218 -46.992587964053214] :complexes-generalizeall "6N4ihz{LK1" :complex-notequal? :v :set-empty? :refs-items 0 :intervals-return-pop :chars-cutstack :strings-reverse :code-cutflip [18 18 16 41 3 -31 -24 -5] #push.type.definitions.complex.Complex{:re 3, :im 1/10} :scalars-fillvector :vector-contains? 46 :intervals-take [49.17348227571729 37.817300793108885 27.154581745443537 18.941813818920323 -40.98239475751595 1.7504505177610952 24.414425361076525] 19.262117542436428 2 true 425/531 :vector-sampler :scalars-save :scalars-indexof :char-return -1221.9994608059815 0 :push-bindings :booleans-swap 0.951432370319182 :complexes-concat :set-flush :set-tag [35 -48 -30 40 46 -11] :booleans-echo [18.680746453987936 5.835957576892405 -25.783899680257015 13.099614172567186 17.013311559005103 49.34028487714551 -49.16438415715876 -19.263322017880704 -9.077811380698364] :chars-flush :complexes-first :w :chars-storestack -0.30863174741495314 :complex-add :vector-liftstack :booleans-cycler \, :generator-save -29/279 :vector-in-set? :intervals-stackdepth :interval-include? :code-storestack :scalar-float? :exec-while :snapshot-notequal? :refs-liftstack #push.type.definitions.quoted.QuotedCode{:value (:chars-occurrencesof :scalar-floor :scalars-in-set? :intervals-generalize \q :complexes-echoall :snapshot-new -36932.94601941731M)} :char≤? :vector-yankdup :snapshot-yank #push.type.definitions.quoted.QuotedCode{:value (:chars-return-pop :ref-rotate :snapshot-tag :scalars-shove ((true :set-save false 192/559 [27.329297942163684 -28.517118358614248 -33.861806985519685 -34.08512622629524 34.47645445949692 12.970243551294523]) :strings-echo :chars-vfilter 38832.62075858528M) #push.type.definitions.interval.Interval{:min -325.6891477416338, :max 14, :min-open? false, :max-open? false} "WA}@!,74H" #push.type.definitions.complex.Complex{:re -7/2, :im -1/2})} [2.942441568578616 32.75886222245943 45.37419842257752 45.98681437175878 -24.621593261618102 42.29922137343303 -6.1723108202568895] :ref-fullquote :refs-new :generator-return-pop 7543.179767244968M :scalar->code :code-savestack 29819N :t :scalar-ln :refs-storestack false #push.type.definitions.quoted.QuotedCode{:value ()} :exec-do*count :booleans-flipstack :scalars-tagstack -19.296883947902298 :complex-flush :snapshot-storestack :chars-return -9049.330792562338M :code-rotate true 1 36890N #push.type.definitions.interval.Interval{:min -386, :max -79.24338689109413, :min-open? false, :max-open? false} :vector-distinct :scalar-max :interval-swap -29733N :interval-include? 147.74754215291978 :interval-flipstack :x :ref-notequal? [43.095108682673796 -24.44717703124968 -47.449932958248745 44.59814552930686 27.22412239033551 5.685056785113204 -13.89580111288113 -2.765521307801656 -2.226035946680369] :booleans-cyclevector 38.231311369161446 :scalars-sampler 431/486 :scalar-intoset 31 6480N -2181.893987727702 -272/5 :tagspace-pop :interval-echoall :tagspace-max :string-replacechar :boolean-rotate :booleans-nth :ref-againlater [7.746064597233207] :ref-echo :exec-return-pop :refs-save #push.type.definitions.interval.Interval{:min 234, :max 345.635984402964, :min-open? false, :max-open? false} :vector-storestack :intervals-store 3 "!A.:e,Y}5[" :tagspace-offset :complexes-cycler #push.type.definitions.interval.Interval{:min -498.1562401903437, :max 323, :min-open? false, :max-open? false} :snapshot-tagstack :tagspace-offset -2605.815896912297 :vector-echoall :complexes->tagspace :h :complexes-conj :x :tagspace-lookup :intervals-equal? :chars-set :refs-conj-set :exec-flipstack :complexes-later [20.818703246596854 -44.70847366090868 -14.563882268107278] :intervals-reverse :strings-sampler :complexes-contains? :scalars-cutflip :scalar≤? :refs-flipstack :generator-flipstack :strings-save :complexes-vsplit \O 4 :interval-notequal? :scalar-save :chars-tagstack :string-replacechar :chars-return :scalars-rotate :code-cutflip :string-againlater :string-stackdepth 4 :string-intoset [-6.649268940950925 -35.239298311231934 -41.07798957322588 28.597821806908257 2.142871850226946 16.76897226124072 21.48200320299985 48.7729282506878] false :print-newline :tagspace-tag 505N :char-intoset :booleans-conj :complexes-later :refs-do*each #push.type.definitions.interval.Interval{:min 244.9239578407071, :max 348, :min-open? false, :max-open? false} :interval-as-set 1 40.5855016949009 :vector-rerunall (19 :intervals-vfilter :complexes-butlast :complexes-yankdup :strings-build :refs-contains? :scalar-tagstack) :tagspace-keys :complexes-emptyitem? -457/987 :ref-intoset -28 :booleans->tagspace :string>? 28.58271324556442 :interval-min -261/226 #push.type.definitions.interval.Interval{:min -3.7083297714746095, :max 283, :min-open? false, :max-open? false} :booleans-distinct :exec-pop :float-uniform :interval-max :tagspace->code -3468 :scalar-cutstack :code-flipstack :n :string-intoset :set-equal? :generator-pop :strings-contains? 2203 -2302 -2092.8757475452576 :intervals-tag :strings-stackdepth :string-cutstack 24.703347752689538 #push.type.definitions.complex.Complex{:re 3, :im 0} :exec-print :ref-cutstack [15 -48 -26 -8 -5 8 -42 49] 428/35 #push.type.definitions.complex.Complex{:re -5, :im -4/3} :complex-empty? -4 2.8261826243428594 3119 :chars-first :chars-rest -16.306227685784528 -9338N :exec-yankdup 7810N :complexes->set :refs-dup :intervals-flipstack :intervals-items :complexes-generalizeall :string≤? :tagspace-min #push.type.definitions.interval.Interval{:min -340.1739097072777, :max 350, :min-open? false, :max-open? false} :scalar>? :exec-notequal? :interval-include? (:scalars-yank :ref-dump-tagspace) :chars-generalize :set-union \4 \> :vector-storestack :scalars-occurrencesof :chars-indexof \l :scalar-E :intervals-save :scalars-savestack \A 32874N 0 :set-subset? :string-save -22.739508195251723 -23 :strings->set :vector-first :set-superset? \U :scalar-return 20.092809153323955 :snapshot-liftstack #push.type.definitions.quoted.QuotedCode{:value (:strings-sampler :refs-conj-set)} 0 :scalar-arcsine #push.type.definitions.quoted.QuotedCode{:value ()} -38 17 4433.752091231458 :booleans-shove :tagspace-againlater -201/316 :chars-save 1280.8026875177702 :strings-stackdepth :interval-rotate :scalars->tagspace :boolean-faircoin :chars-as-set :v :vector-swap 1.386117264712377 -2277 -4668 -40844.45670441943M \. :string->code :complex-conj-set :scalars-split :vector-fillvector -151/267 :scalars-notequal? :tagspace-offset :code-savestack 2 :booleans-cyclevector \6 :generator->code 45411.63817896851M () -14 :scalars-pt-crossover ");4w#nXcV." [32.98216160085367 47.93496363310061 -8.61188776532775 20.89977518155837 -0.37360746937642375 -17.900632327229893 -33.39374418897411 -35.61561348296418] true :boolean-as-set :push-storeARGS 225/751 :scalars-cutstack :chars-cutflip :exec-rotate :snapshot-begin :scalars-savestack :tagspace-dup :refs-concat :scalars-set [-1 -9 -4 -17 45] :strings-contains? :scalar-echoall :tagspace-cutflip :scalar-pop -44341N :tagspace-save :generator-echo :complexes-print ":;WgIP`#o-" :ref-conj-set :scalar-return-pop :intervals-as-set :ref-rotate 47 [-17] #push.type.definitions.quoted.QuotedCode{:value ([38.4864459176612 -4.46595620435258 -30.51704518970562] false :booleans-build 2173.1660692265914 [21 28 21 -5 40] 9.69511297586996)} :char-as-set :strings-flipstack 17/150 :scalars-reverse 226/483 2145 2997 :booleans->tagspace :booleans-byexample 229/988 :string>? :booleans-fillvector :intervals-return :chars-comprehension 2.9778817449572195 :vector-echo :strings-as-set 3 :string-last :exec-shove :complex-yank :scalars-pt-crossover :string<? :complex-add -27 [37 -49 48 11 33] :vector-dup :char-return-pop :boolean-dup :code-as-set :booleans-print 13.42770578587065 #push.type.definitions.interval.Interval{:min -18.968998237690926, :max 139, :min-open? false, :max-open? false} :string-swap :interval-print #push.type.definitions.quoted.QuotedCode{:value (#push.type.definitions.quoted.QuotedCode{:value (:refs-tagstack :string-return :intervals-conj-set :chars-build :ref-fullquote :intervals-take :refs-vfilter)} :code-extract :tagspace-storestack :complexes-flush true)} #push.type.definitions.quoted.QuotedCode{:value (:intervals-save "-<H!&j}t?" :string-yank :vector-comprehension :booleans-flush -3/2 :string-yank :string-last)} :string-tag :o :scalars-take :set-liftstack #push.type.definitions.quoted.QuotedCode{:value (186/419 :booleans-generalize :scalars-flipstack)} :refs-equal? #push.type.definitions.interval.Interval{:min -460, :max -109.03313805280777, :min-open? false, :max-open? false} :scalars-yank :string-yank :scalar-complexify -19989.71400118843M :booleans-nth :tagspace-rotate :v :q :strings-intoset :code-rotate \g 3217 :ref-lookup :string-length \b :string-removechar :refs-vremove :refs-take :chars-echo \Q 0.14628718697336218 -48 49368N :chars-againlater true \9 :chars-last false 864.490898585701 :strings-rerunall :chars-store -43/924 :vector-portion \J :intervals-generalize -34.983121693197546 :chars-liftstack :vector-refilter :boolean-conj-set :char-return :exec-when :booleans-nth :string-setchar :vector-in-set? :ref-print :refs-last -3168.6090379967654 [-7 3 7 8 -44 -1] :snapshot-dup :boolean-save :i :booleans-indexof 1839 :booleans-shatter :boolean->string :generator-later :string-length :complexes-as-set [-10 19 -50 38 2 -25 2 -28] :interval-min :ref-return-pop :tagspace-yank :booleans-cyclevector :char-yankdup :i :booleans-save :chars-store [-36.61760059465517] 1 :booleans-dup :scalars->code -19154N :strings-return-pop false :boolean-return :scalar-save :interval-recenter :refs-reverse 1432.689170006537 :snapshot-notequal? :vector-emptyitem? :string-shatter #push.type.definitions.quoted.QuotedCode{:value (:complexes-first -341/295 :booleans-conj-set)} \V 22.185785016389616 () -22838N :a :code-as-set -46 :boolean-return-pop :scalar-inc :complex-subtract :tagspace-valuefilter (:scalar-stackdepth) :refs-sampler \a :chars-sampler :intervals-save :tagspace-save :interval->code :chars-echo :intervals-portion #push.type.definitions.quoted.QuotedCode{:value (:strings-occurrencesof)} :strings-do*each :booleans-conj -2134 :char->code :complexes-do*each :complex-swap :complexes-stackdepth 2 :complexes-notequal? :code->string "vkXSANeY$j" 230 :vector-cutstack :char-save :code-conj-set \K :char->set -0.8612368218822262 :vector-tag -2101 (:strings-cutflip (:interval-rebracket :refs-intoset :code-comprehension :complex-dup 38/49 :scalar-conj-set) :exec-conj-set :booleans-dup :d 2.736218598545972 :tagspace-split) :code-yankdup :char-yank -37855.85029885813M :char-digit? 4.258060908251428 #push.type.definitions.quoted.QuotedCode{:value (-36745N :strings-portion :snapshot-tagstack -415/98)} :exec-later #push.type.definitions.interval.Interval{:min 133.07310620263684, :max 164, :min-open? false, :max-open? false} :vector-new :chars-in-set? -40925N :scalar-E 464/529 -47039.359909733794M :vector-store :strings-later -13 [-39.20153784489341] :generator-yankdup :vector-byexample :scalar->boolean :complexes-generalize :complexes-store "7|;k\\PPxy}" :e 133/177 :chars-intoset :scalars-nth :interval-hull :intervals-cycler -3 :chars-empty? -133/897 :intervals-save :exec-rotate 353/545 :error-empty? :char-letter? :generator-flipstack 1 :exec-echoall [-40 -22 4 -24 37 42 8] :refs-savestack #push.type.definitions.quoted.QuotedCode{:value (:snapshot-tagstack :char-againlater #push.type.definitions.complex.Complex{:re 1/2, :im -1/18} :string≤? #push.type.definitions.interval.Interval{:min 160.4251408564296, :max 173, :min-open? false, :max-open? false} :push-bindingcount)} 736.2243430641211 :chars->tagspace -8225.730426433242M :complexes-shatter :ref-intoset true :complexes-take :generator-return \$ :scalars-vremove true -11 :intervals-sampler :booleans-cutflip :complexes-reverse :complexes-in-set? (:interval-reflect) :refs-notequal? :intervals-distinct 0.6667481109303033 true :set->code #push.type.definitions.complex.Complex{:re -4, :im -5/7} :snapshot-notequal? :intervals-storestack 6.410120028556776 :ref-known? :booleans-return :refs-dup [18.600962340958333 44.01428193341174] :vector->tagspace :ref-dump-tagspace :code-yank :code-points #push.type.definitions.complex.Complex{:re 4, :im -1} :tagspace-valueremove :boolean-print [-28.551147242332974 7.428163990287082 44.819284082080586 -34.29546388274272 43.7019953376801 -39.526731494635534 5.645946830035953 11.432802282202246 -46.20058050196546] -18 :char-againlater :b :scalar>? 451.3047862069852 :tagspace-count -1 false 1489.3024550618093 :booleans-yank #push.type.definitions.interval.Interval{:min -202.8797862642723, :max -23, :min-open? false, :max-open? false} #push.type.definitions.quoted.QuotedCode{:value (:complex-againlater :complex-flush false)} :interval-againlater false -1020.2249108011642 7506N 1234 :complexes-tagstack :chars-rotate 4600 :booleans-tag :scalar-ratio? :interval-echoall "c5\"pvDp(iT" :vector-concat #push.type.definitions.interval.Interval{:min -103, :max 368.10723863225337, :min-open? false, :max-open? false} :code-equal? false :scalar-infinite? :chars-equal? #push.type.definitions.interval.Interval{:min -277, :max -108.33045326284719, :min-open? false, :max-open? false} :intervals-rotate 22503.60303070213M :code-empty? false :intervals-reverse 6213N :complex-add (:tagspace-save :chars-rest) :log-empty? :set-cycler [-4.22014907702296 -48.50421276796617 10.42194830945612 34.14249345771364 -5.5315784906008645 6.929368671976 47.654747255349776] :s :tagspace->code -4.177967301157036 -721 :intervals->code :intervals-vremove :strings-generalizeall 41199N :complexes-fillvector () -377/673 :complexes-take :booleans-rest 13462.362045443253M :set-intersection \V \L :h (:r :code-savestack :float-uniform :string-reverse :scalar-modulo "<<3AR>;/r" :char-liftstack :chars-build) 2577 true :refs-nth :strings-cycler :complex-yankdup :string-last :char-shove :interval-hull 26/433 :scalars-later :set-as-set \s -963 :complexes-set :code-print :ref-exchange 3 [24 -43 -21 23 16 0 49] :generator-rerunall \t :scalar-max "3J./yiQc(Z" :vector-flush :scalars-echoall :booleans-in-set? :chars-intoset :tagspace-empty? -4610 :intervals-cutstack :interval-cutstack :vector-savestack [-29.69534024678483 8.269380823807616 1.9653486083176972] :exec-cycler :generator-rerunall :generator-shove [-25.75843154173012] 3334.421549426952 -45.4961947813958 :exec-intoset :exec-stackdepth 3 \j :complexes-pop :ref-save :exec-storestack :strings-sampler :char-digit? :scalars-pt-crossover :interval-overlap? :booleans-set :p :interval-shift :booleans-pop :snapshot-stackdepth :complexes-cutflip :tagspace-savestack [-42.69191063925737 -31.076159902611632] 1367.5554042131434 :code-rest 391/706 :scalar-sign :booleans-shatter true true :boolean-store #push.type.definitions.quoted.QuotedCode{:value (:strings-yankdup true :intervals-vsplit :scalar>? ())} -4262 :strings-nth :booleans-comprehension [-20.471327072571167 21.396693806242794 39.07675363334984 -26.70843931077117 22.005605052723652 -26.073951265544004 0.7448405306432093] [28 25 -28 -41 -31 -40 28] -4885.453127910979 :intervals-vfilter :t :scalar-yank :code-length :strings-new :refs-set :generator-reset :complexes-concat :exec-if :code-pop :booleans-set :strings-return "<QI|'dH=9V" :scalar-intoset #push.type.definitions.complex.Complex{:re -2, :im 1/2} :chars-yank :vector-cyclevector :tagspace-tidy "4?/NC8uN]W" :scalars-empty? -2849 4837.632698195865 -4.664252936070157 320/877 -41 27652.779694969562M :set-later -35.23575744513072 3.9010200837015745 :set-rotate :string-occurrencesofchar :complex-notequal? :chars-swap :complex-return-pop :chars-rotate -4 :complexes-tagstack 1108.1945696533503 :vector-distinct :code-tag :strings-items :booleans-tag #push.type.definitions.quoted.QuotedCode{:value (:booleans-return-pop :code-store 113/279 :complex-cutstack)} [39] -0.42931012813402525 :exec-do*while :complexes-portion :tagspace-keyset :complex-cutstack :complex-add :set-intoset :strings-conj-set :booleans-pt-crossover :chars-dup 32534N :scalar-echoall :scalars-comprehension :generator-againlater :ref-new :booleans-return-pop #push.type.definitions.interval.Interval{:min -189.8615612323432, :max -3, :min-open? false, :max-open? false} [-8.383838010953923 34.74021717952853 -34.139437716967514 -39.478099848855294 6.156092712718518 32.74297702772293] :intervals-equal? -39 -1 3558.9864276654516 :complex-equal? 21659N -40 :code-map 3390 :chars-print 16.227392431056614 :scalar-reciprocal :boolean-intoset :complex-storestack :snapshot-later :chars-intoset :log-empty? 1 :vector-tag #push.type.definitions.quoted.QuotedCode{:value (:scalars-as-set [5 -20 -7 -40] 2.7768714441442626 :scalar-flush -514.6707004495947 3387.607954734871M)} :complexes-fillvector :refs-portion :set-rerunall :chars-return-pop -33191.41572034986M :set-intersection :char-cutflip :char<? :complexes-return -21/55 #push.type.definitions.quoted.QuotedCode{:value (-16408.895961619914M 37.89467887750156 :complexes-cutflip :booleans-vfilter :string-min :vector-cycler)} :intervals->code :complex-yankdup :ref-forget :complex-tagstack -1106N :complexes-conj-set -4 () 0 :char-uppercase? 436/145 -24 11.221043674091632 :strings-againlater :tagspace-storestack :boolean-arity2 :interval-overlap? :strings-cyclevector :chars-reverse 2944N :j (:ref-flipstack :complexes-echo :snapshot-dup) :vector-equal? :scalar-yank :refs-items -5 \G :code-intoset :string-occurrencesofchar :complexes-build :push-bindings :intervals-concat :complex-multiply #push.type.definitions.quoted.QuotedCode{:value (:scalar->asciichar)} true :complexes-return-pop -4.954478989595742 :string-save :tagspace->code -3 39 :intervals-sampler :scalars-cutflip 23212N -4333.49823277907 :vector-later 31172.609110577483M \D 3155.1065057696305 :refs-length 198/421 "J:f*,q65ED" [-8.280388605236467 8.379715810934961 -41.59698476952569] () :boolean-againlater #push.type.definitions.interval.Interval{:min -494, :max -339.45712859012366, :min-open? false, :max-open? false} #push.type.definitions.complex.Complex{:re 1, :im -2/9} :code-print 19/124 -3267.763682094279 :exec-conj-set :scalar-liftstack :g #push.type.definitions.complex.Complex{:re -3, :im 1/6} "(H=Pt(0`ii" :strings->code -31.039974114823277 #push.type.definitions.quoted.QuotedCode{:value (-630.5848513575229)} -358/599 :scalar≥? :set-cutstack :booleans-new :exec-liftstack :code-member? :vector-yankdup \h :scalars-intoset :complexes-last :intervals-generalizeall :exec-later :tagspace-remove (:char-rerunall) :push-unquoterefs :chars-replace #push.type.definitions.quoted.QuotedCode{:value (:strings-do*each)} :scalar->boolean :intervals->set :push-bindings 33296.247045081036M 14.265203045807738 :exec->set #push.type.definitions.quoted.QuotedCode{:value (:refs-liftstack #push.type.definitions.interval.Interval{:min 275.91293006750766, :max 375, :min-open? false, :max-open? false} 37.64040259021171 :booleans-fillvector)} #push.type.definitions.interval.Interval{:min -25, :max 178.48171858563433, :min-open? false, :max-open? false} :intervals-new false :chars-as-set :generator-yank :tagspace-return :vector-dup :string>? #push.type.definitions.complex.Complex{:re -4, :im 4/9} :code-contains? :strings-liftstack :strings-first :boolean-save :vector-cycler [] :booleans-intoset :refs-savestack :string-occurrencesofchar :vector-as-set -49 -26 :strings-shatter [11.526197863344855 -4.642503409826347 23.900085651016624 -13.59332636894618 45.64096215135038 17.775645613284453 -1.2246692649332758 43.89180732699771] :scalar->asciichar :intervals-replacefirst :complexes-stackdepth -785.6701228341917M #push.type.definitions.interval.Interval{:min -386.83541451000417, :max -187, :min-open? false, :max-open? false} :u 2 :snapshot-liftstack :intervals-return :strings-sampler #push.type.definitions.quoted.QuotedCode{:value (1.0193354218904291 13 :booleans-remove)} -19.55053369765517 :strings-save :boolean-intoset :scalars-replacefirst :intervals-as-set :string-containschar? "A3I\"w5Err(" :code-insert :interval-shift 16109.798422935346M :tagspace-savestack :snapshot-flipstack :intervals-conj :char-letter? [-13.101735068793971 3.964937018755002 -27.72413244878499 -24.570168582747463 40.323485309740335 11.461822453921712 -27.20456020151546 -13.563644660225492 36.63363120142739] #push.type.definitions.complex.Complex{:re 0, :im 3/2} :booleans-pt-crossover :k :generator-shove :code-stackdepth :set-equal? true :tagspace-max :vector-store :push-nthref 34 -1 49 :scalar-reciprocal :complexes-first :boolean-liftstack :set-sampler 7520N :interval-savestack :complexes-savestack :booleans-remove :ref-yank [-44 -27 5] :complexes-portion -5 :booleans-shove 3 :intervals-intoset :p :char-intoset :s :set-conj-set -4 0.12479895020039411 true :exec-sampler :complex-add #push.type.definitions.interval.Interval{:min -99, :max 346.552999444452, :min-open? false, :max-open? false}], :bindings {:OUTPUT nil, :e ":>GEkvNlqb", :g :char-pop, :c [-36 26 -3 -2], :j #push.type.definitions.complex.Complex{:re 3, :im 0}, :h :interval-tagstack, :b 4507.23017014484, :d 1, :f -47324N, :i :j, :a :scalars-shove}}