{:error nil, :program [:string-removechar :b :intervals-indexof :scalars-liftstack #push.type.definitions.interval.Interval{:min -298, :max 366.84798987466286, :min-open? false, :max-open? false} :scalars-echoall :set-rotate :strings-return-pop :chars-distinct 1725 #push.type.definitions.quoted.QuotedCode{:value (:booleans-new :chars-set :exec-noop :boolean-dup -13145.12848241879M)} :exec-tagstack -4237.283207963141M #push.type.definitions.complex.Complex{:re 1, :im 4} :code-quote :complexes-nth :scalar-arctangent :intervals-cyclevector :complexes-againlater \h :string-butlast #push.type.definitions.interval.Interval{:min 254.54591229568223, :max 285, :min-open? false, :max-open? false} [-18 -45 -14 -28 20] :complexes-byexample :vector-later :char->string :scalars-new 49436.91731546637M [5.655754341614696 31.63123402442841 41.476537452017766 -48.473023547566186 22.539060734904567 31.11233016603859 42.059720873908006 45.49966979036009 23.23858095319312] :set-intoset :string-later #push.type.definitions.complex.Complex{:re -2, :im -3/2} :vector-dup 2 :generator-totalistic3 :exec-yankdup :set-difference :code-wrap 0 :generator-echoall :scalars-cutstack :set-dup :tagspace-liftstack \u [-47 -12 -49 13 -24 -42 29 35 16] 27.101417712452516 :complexes-concat 20626N :chars-swap :refs-vremove -3/388 -30.555149323281938 4.816092269494209 1876.6713930971555 \W 14.840842503904312 :scalars-againlater :intervals-new :refs-portion :boolean-empty? [-42 -18 39 -49 26 9 11] :refs-conj-set false :snapshot-cutflip :refs-yank :l :strings-intoset [-33.0787130302367 0.9665904232072577 -1.3822339587229635] :intervals-vfilter :char-max :snapshot-empty? -3.368983942192841 :complex->set \6 :code-storestack :code-do :char-echo 979.0742287221528 :refs-swap -27 :intervals-replace -3128 404/925 :exec-tagstack :scalars->code :strings-vsplit :complexes-length :code-wrap :string-tagstack [-48 24 9] -17.18479278118992 :booleans-later -1900 (:intervals-empty? #push.type.definitions.quoted.QuotedCode{:value (:interval-union 390/151 :char-max)} :vector->tagspace :string-swap) false 759 [42.74220313239476 16.31454316749884 5.4785867973705535 -32.764861341478294 -2.8854557604292097 23.190380117440327] :char-cutstack -6 :booleans-echo 12268.835222780486M "BF>qpw>e@F" :generator-echo :refs-equal? :generator-return-pop :set->set :complex-norm :chars-conj "er-<tWDD^{" :scalars-savestack :chars-portion :complexes-store 5 :chars-indexof #push.type.definitions.quoted.QuotedCode{:value (:interval-flipstack #push.type.definitions.complex.Complex{:re 7/2, :im -1/14} :complexes-echoall :char-whitespace?)} :strings-later :booleans-nth :chars-as-set #push.type.definitions.interval.Interval{:min -114, :max 460.12944535609313, :min-open? false, :max-open? false} \q \h :booleans-flush :vector-liftstack #push.type.definitions.complex.Complex{:re -2, :im -2/7} :d :boolean-stackdepth [14.331105581689457 -31.527351577008535 -7.704944885084629 41.33775487196826 -43.83443571010718 -48.718803249359745 39.27504131115451 21.908029966972393 -17.448989680712266] :scalar-tag :char-print [-30.47783067242983 -23.798845815034674 14.591229207360726 -21.7057074172488 -30.983575810711926 -26.900968732669106 8.490496445099268] :complex-in-set? 489 :scalars-comprehension :integer-uniform #push.type.definitions.quoted.QuotedCode{:value (:tagspace-print)} :code-in-set? :scalar-divide :l :code-later :vector-cutflip 4814.330116788555 :generator-save :exec-conj-set 99 3.4920645910293917 :char-yankdup :generator-tagstack :code-flush :char-dup :tagspace-filter :scalars-notequal? -1.7592238101756372 :scalar-bigdec? :refs-butlast :h :refs-rest :generator-tag :string-butlast :refs-cycler :scalars-store :scalar-storestack :scalar-cutstack :refs-replace :ref-intoset :ref-clear false [-29.911675937231628 -34.15819029257683 3.3491522612088644 -38.84963440385244 17.41049488296322 -32.98324160257149 -24.171963491403716] [-27 6 40 -24 -27 6 -21] :intervals-stackdepth "trxrq(gnTI" #push.type.definitions.complex.Complex{:re -2, :im -3/8} -52/371 3.9244780154169145 -433/916 :intervals-echo :complex->code :push-quoterefs :intervals-cyclevector :complexes-first #push.type.definitions.interval.Interval{:min -332, :max 114.17128213043497, :min-open? false, :max-open? false} 4.06569373887625 :scalars-swap :tagspace-lookup :set-difference -3262 :booleans-byexample -1 :char-swap -5093.108049037553M :scalar-subtract :intervals->tagspace #push.type.definitions.interval.Interval{:min 143.23036516324066, :max 364, :min-open? false, :max-open? false} :boolean-notequal? #push.type.definitions.quoted.QuotedCode{:value (:vector-store :chars-sampler :strings-tagstack "U;7[7#WFi" #push.type.definitions.complex.Complex{:re -1/2, :im -5/8} [21.639217893059907 32.831687659318845 15.994274281278571 28.06277108455585 -25.561806250745477 25.51762013676013] :set-notequal?)} :vector-rotate 2 [-47 -43 -2] :booleans-stackdepth :vector->tagspace :vector-empty? :refs-equal? :booleans-generalize "1*I3M})=v=" :scalars-vremove :float-uniform -2676.7425023060086 :string-shove -5216N 4727.036301489845 :strings-take :set-notequal? :vector-cutflip :vector-flipstack -28262N 4.103322229492463 :strings-empty? 3159.452516006979 :set-in-set? #push.type.definitions.interval.Interval{:min -2, :max 457.3528628366589, :min-open? false, :max-open? false} :refs-byexample -2711 17 #push.type.definitions.interval.Interval{:min -205, :max -29.6671192651998, :min-open? false, :max-open? false} :ref-stackdepth :generator-cutflip :ref-yankdup :exec-empty? :complex-return-pop :t 33275N :booleans-print :ref-cutflip :scalar-yankdup :scalar-integer? #push.type.definitions.complex.Complex{:re -1, :im 0} -42 :push-unquoterefs :strings-intoset :exec-do*while :intervals-echo :a :snapshot-tag :generator-store -35.07441668837051 :float-uniform :ref-print :scalar-ln :tagspace-offset 45678.99257166205M :booleans-equal? :scalar-againlater :vector->code :code-nth :scalar-intoset [-19.0824464859396 -45.76342424090299 -35.23637054015259 40.432229453933985 35.10783408798082 -42.51733820499077 3.208593752919896 34.3319782517561] 37774.073584454774M :intervals-take :generator-counter :interval-tagstack \s -1/24 :vector-flipstack :refs-rerunall [-43.88014688611638 -42.09224783101099 -32.63439236094895 37.41509183399231 11.264549982347347 2.3306495655388417 11.427849322856176 -21.907085853625485 -8.158366260677106] -3.944210867710396 :string-rerunall 2 17 #push.type.definitions.interval.Interval{:min -458, :max 357.98699872845225, :min-open? false, :max-open? false} :code-do*range :booleans-dup () :generator-return-pop #push.type.definitions.quoted.QuotedCode{:value (:string-return-pop :ref-dup 2928.3327439163468)} -51/29 #push.type.definitions.quoted.QuotedCode{:value (:complexes-cycler :scalars-portion)} :string->tagspace -24653.547629808203M :booleans-cutstack :ref-fullquote :t :string<? 394.00689109397354 0 #push.type.definitions.interval.Interval{:min -418.9936511254834, :max 327, :min-open? false, :max-open? false} false :refs-echo :intervals-notequal? :booleans-save #push.type.definitions.complex.Complex{:re 0, :im 2/3} :interval-cutstack :strings-replacefirst :scalars-remove \" (:complex-echoall :ref-cyclevector #push.type.definitions.quoted.QuotedCode{:value (0 :interval-tagstack \o)} :tagspace-echo :refs-print :generator-later 7.465498760398418 -26.417778320081357) 11681N #push.type.definitions.interval.Interval{:min -494.65661064319266, :max 100, :min-open? false, :max-open? false} :strings-cycler :chars-byexample -12365.091546354532M :snapshot->code :exec-when :string-first :chars-rerunall :scalars-dup :scalars->code :strings-vsplit :generator->code #push.type.definitions.interval.Interval{:min -68, :max 430.56422914315954, :min-open? false, :max-open? false} :complexes-cutstack :snapshot-againlater :string-yankdup #push.type.definitions.complex.Complex{:re 1, :im 1/2} :booleans-emptyitem? :interval-print -9632N :set-storestack :refs-store :complex-conj-set :complexes-byexample :scalar-reciprocal :scalars-rotate :f :generator-storestack :string-replace (#push.type.definitions.interval.Interval{:min -331, :max 423.2305801530033, :min-open? false, :max-open? false}) :charâ‰¤? :interval-later :complexes-indexof :s "u{CC]%>h$X" :ref-dup 4882.190287417419M 11.948987402820691 :refs-liftstack :generator-stackdepth :vector-return :a :tagspace-max :chars->tagspace -4 :refs-storestack :complexes-storestack :complex-echoall :scalar-tangent :strings-distinct 2812.306106269034 :set-save :h :vector-fillvector :refs-conj :strings-echoall :chars-notequal? :snapshot-end #push.type.definitions.quoted.QuotedCode{:value ()} #push.type.definitions.interval.Interval{:min -103.21861126596986, :max 402, :min-open? false, :max-open? false} :char-yank :char-echoall :interval-flush :intervals-tag :refs-new :tagspace-lookup :l :m 4 :boolean->integer :ref-clear :snapshot-liftstack #push.type.definitions.complex.Complex{:re -1, :im 1/2} :complex-flush :complexes-swap :chars-echo :vector-stackdepth :generator-return-pop \6 :tagspace-max (:vector-tag :code-wrap \q false) :push-nocycleARGS :scalar->string :code-stackdepth :vector-cutflip :chars-empty? #push.type.definitions.complex.Complex{:re 3, :im -1/3} :j :snapshot->code :push-unquoterefs :interval-reciprocal :o :chars-cutflip 3551.2690830978972M (-5/2) :complexes-cutstack [31.106646437131545 -8.994370882626477 49.48062263237978 43.267900207105725] :strings-stackdepth :refs-distinct -1319.726309212097 #push.type.definitions.quoted.QuotedCode{:value (11.240641948286061 :strings-items :exec-print #push.type.definitions.quoted.QuotedCode{:value (741.7163310681653 :string-replace :refs-shatter 1 30.59776771809385 :scalar-cutflip)} 3071.087335125937 (:refs-fillvector :ref-lookup :boolean-flush :vector-return [-25.673448458885115 6.606444757765637 26.577195552383955] :scalar-bigdec?) :generator-cutstack #push.type.definitions.interval.Interval{:min -320.31671017446683, :max 197, :min-open? false, :max-open? false})} :chars-rerunall -28.139948296137064 -1 #push.type.definitions.complex.Complex{:re -1, :im -5/4} :strings-butlast :complexes-sampler :strings-do*each :charâ‰¥? 5 :strings-do*each 17 :chars-store :chars-vfilter :booleans-empty? :scalar-conj-set :complexes-liftstack :booleans->code :code-list #push.type.definitions.interval.Interval{:min 87, :max 365.7656311217761, :min-open? false, :max-open? false} -1.199215691850235 :intervals-conj :intervals-save :k :exec-print [28.594958840537444 -22.176971569617944 10.662504591253771 -47.554393781485714 -21.943650652570025 -14.586454240298885 -49.49318282011122 -18.454474373990205] :chars-rest :complex-rotate :intervals-rerunall 2 #push.type.definitions.complex.Complex{:re 4, :im 3/4} -34.03774432100395 -4 :complexes-comprehension :code-map 269/986 :string-solid? "`.Np*|#br_" "2Er,EO.gO4" :exec-print [-30 16 15 30 42] :chars-cutstack [-15 -45 29] 1424.7754807843685 :intervals-take :complexes-shove :scalars-as-set :chars-return-pop "P={TVj5#M&" :scalar-fractional 99/131 [8 42 17 49 43 39 -23 -23] #push.type.definitions.complex.Complex{:re -1, :im -1/4} :string-notequal? :booleans-items :scalar-E -30 #push.type.definitions.interval.Interval{:min -202.48150200155703, :max 146, :min-open? false, :max-open? false} #push.type.definitions.interval.Interval{:min -298.5537065314496, :max -59, :min-open? false, :max-open? false} 3 :chars-swap :strings-vfilter (#push.type.definitions.complex.Complex{:re 7/2, :im 1/2} [-33 28 -12 19] #push.type.definitions.quoted.QuotedCode{:value ()} #push.type.definitions.quoted.QuotedCode{:value (:chars-in-set? :vector-dup \X)} :scalar->code #push.type.definitions.quoted.QuotedCode{:value (:set-cutflip -2870 :refs-dup :set-in-set?)} :scalar-dup) :chars-butlast 1.2250884234225836 :complex-zero :boolean-rerunall #push.type.definitions.complex.Complex{:re -1, :im 3/2} :vector-refilter (:intervals-notequal? :interval-rotate :code-intoset :refs-return-pop) \= :string-intoset :exec-cutflip -4442 :strings-conj -19.41895454048802 :string-flipstack :strings-equal? :snapshot-later -29 :interval->code :strings-empty? :vector-portion :tagspace-count :boolean-or 4.5412849752179465 :interval-equal? :set-as-set :complex-swap :interval-divide :code-insert :vector-dup :intervals-first [21] 1279.6854003660292 :boolean-return-pop :refs-replacefirst :z :refs-do*each :strings-conj-set 764.0452314914928 :code-echo :intervals-cyclevector #push.type.definitions.quoted.QuotedCode{:value (:h 0.28781822686983105 :booleans-contains? \d [-36.22110278065945] :chars-save :complex-pop)} :snapshot-flipstack :interval-cutstack :snapshot-cutstack :intervals-vremove #push.type.definitions.complex.Complex{:re 3, :im -4/3} #push.type.definitions.quoted.QuotedCode{:value ([-22 -10 38 33 6 -39] 3377 #push.type.definitions.quoted.QuotedCode{:value (:interval-yank 0.6123611901730825 :snapshot-againlater :char-tagstack :string-removechar :refs-savestack 191/114)} :scalar-subtract)} 22884.983954037234M :boolean-store :chars-first false :booleans-yank :vector-save :code-later :code-echo :tagspace-keyvector [-13.246476982946596] :booleans-fillvector :code-as-set [27.76445053454532 -31.260753882413194 16.13681488855876 -9.581781220098748] :booleans-againlater :code-rest :snapshot-tagstack true :generator-return 3.7160189454610855 :scalars-cyclevector [46.596868371234734 5.9916888687005425 22.962790854937467 37.81323014254538 -24.8995592023906 46.75542355234563 23.70089026705942] :boolean-return-pop :scalar-modulo :vector-shove :refs-pt-crossover 105.34024439301174 :t :complexes-indexof :set-storestack :scalars-concat :char->set -1 :code-rest #push.type.definitions.complex.Complex{:re -3, :im 0} 3 -12 :refs-pt-crossover :interval-scale :q -217/204 :tagspace-min \v :boolean->string :chars-first :vector-indexof [34 -28 -26 37 -6] \[ \' [33.33595622512661 -20.083366237940393 11.235799219120082 31.402747111300826 26.444336167943433] -354.20762981119606 :complexes-butlast #push.type.definitions.quoted.QuotedCode{:value (:intervals-do*each -3.3647105385645366 #push.type.definitions.interval.Interval{:min 250.83517870479625, :max 409, :min-open? false, :max-open? false} "$=rWWKJoz")} :scalars->set 0 :interval-liftstack 0.0017930369640328792 :vector-echo [9.454088313837225 43.957674116621774 41.95118293192952 40.3898940262161 7.768763048607106] -4914 :string-cutstack 27.927102667387715 :char-return-pop :generator-return-pop :y :booleans-generalize :tagspace-storestack [-3 -23 4 12 21 44 25 29 -33] false :complex-multiply "5|Y)gMDDbv" :string-in-set? -27664.86046990613M :intervals-empty? :booleans-shove :chars-cycler (:string-max :booleans-occurrencesof :refs-shatter -41291.74232085142M [-3 4 0] 53/71 :complexes-remove) [28.993591329980347 8.229006580288726 -8.191660366128048 -16.576024727117 -36.23207196740867 43.904057214845764 -16.933787180894754 -35.46603147971261] -4119 -15632.687561101535M -3.3736028798235806 false :scalar-floor :booleans-as-set :chars-distinct -402 133/180 3483.479635229849 false :scalar-rerunall :strings-build -4.984737689400118 :strings-conj :vector-return :strings-concat :refs-reverse :complexes-do*each [26] [-7.355633963303198 47.34980643024291 0.2707368700775916 28.49963776117052] :refs-take :m :set-return-pop 3288.4892519995865 :complexes-generalize 217/36 #push.type.definitions.quoted.QuotedCode{:value (:string->chars \^ :strings-contains? :scalars-conj-set :interval-overlap?)} :booleans-cyclevector :booleans-shatter 29 :booleans-butlast :refs-empty? :chars-portion -2721N -5 :complexes-remove :chars-flush :strings-concat -21533N 9961N :scalars-swap :char-min () \: 12931.603032147352M #push.type.definitions.interval.Interval{:min -497, :max -262.548416780502, :min-open? false, :max-open? false} :string-take \| 106/647 :tagspace-storestack :tagspace-stackdepth :vector-distinct :q -14822N :interval-intoset :vector-liftstack :boolean-yank -103/167 #push.type.definitions.quoted.QuotedCode{:value (:chars-save "v1Lthi>!-" :scalars-concat)} :boolean-or :set-swap :chars-echo :complex-save :strings-vremove :ref-dump :generator-tag (:push-nostoreARGS [-29.256638038897712 5.033421126685042 42.122346439662465 -44.372692423794525 19.146729587641232]) :refs-nth :char<? :intervals-set -40 true :complexes-indexof :snapshot-cutflip [34.879452015060096 -49.04658567697188 -0.02541691862275286 -21.512137897848383 -8.488599213923706 -25.052877253833262 21.3438966390528] -25/14 :strings-do*each :complex-empty? :intervals-first :tagspace-count :intervals-flush 29.186017191328958 29419.202718161614M [11.751040910853291 -42.36354287503882 -35.00077476887322] :complexes-contains? :tagspace-cutoff true :complexes-remove :complexes-build 49469N :scalars-emptyitem? :scalar-cosine :intervals-byexample :strings-pop :strings->set :refs-conj :scalars-cyclevector :vector-set :strings-return-pop (:charâ‰¤?) :ref-againlater :scalarâ‰¥? :strings-yankdup :refs-echoall :set-save :set-cutflip :scalar-equal? :complexes-concat :boolean-cutflip #push.type.definitions.interval.Interval{:min -428, :max 136.62675769817872, :min-open? false, :max-open? false} :complex-rotate :booleans-concat :string-conjchar :interval-intersection :vector->tagspace :complex-divide :char-digit? 17.72347874719064 [-42.01397109130628 46.73644976292181 21.44824432438321 -38.01193473024998] :set-cycler :exec-pop :strings-flush :scalar-sqrt -862.9958720420609 (:interval-shift) :tagspace-echo :generator-swap :complexes-rest :code-append "Znt$y-$i8v" :scalars-liftstack :set->set :tagspace-stackdepth :booleans-emptyitem? :s :tagspace-tag 3694.1045045068895 3.8314319368952567 :exec-intoset :tagspace-count :refs-cyclevector :strings-savestack :booleans-store :scalars-reverse :o "yZ(jCPw@H'" :vector-remove :char-dup true [-34.042644195112125 -49.542056731421326 37.471461008246365 -17.137002851855435 8.114046628227577 -22.045214866076932] :interval-rebracket -356/109 :scalars-fillvector [] :complexes-as-set -3.9197820382771065 true :snapshot-empty? :scalar-floor :tagspace-later :chars-storestack :x :set-comprehension :generator-echoall :scalars-print :scalars-print 9382.188246650483M :string-as-set :code-shove [-47] -14551N :complexes-portion :ref-yankdup -2.485113769928664 :chars->set :tagspace-merge -25987.829074882386M :char-againlater #push.type.definitions.interval.Interval{:min 64.15032607936382, :max 129, :min-open? false, :max-open? false} :string-comprehension -3.481696482376563 4/105 :generator-rerunall :scalars-last :snapshot-flipstack :code-shove :snapshot-begin :code-do*count -32581N :string-yankdup :scalar-inc :strings-set :strings-flush :print-newline :o #push.type.definitions.quoted.QuotedCode{:value (:string-stackdepth)} :chars-portion :ref-peek :generator-totalistic3 :boolean-intoset #push.type.definitions.complex.Complex{:re -1, :im -2} :vector-liftstack :code-later #push.type.definitions.quoted.QuotedCode{:value ("NQ?WwK@\"V" :generator-yankdup 844.7782284635596 :booleans-reverse :code-return-pop)} :scalar-tag :string-return-pop -4 22.13886110004607 "2ye;ur(\\*i" :string-nth :exec-conj-set :code-flipstack :strings-tag 21 :vector-conj-set 75/701 :vector-notequal? :interval-return-pop :code-later :string-sampler 3 :strings-flush (42702.700451392026M 5/2 :intervals-tag) :chars-liftstack :boolean-as-set -36595N :intervals-equal? 3576.995208125809 :scalars-length (:boolean->code :booleans-new :code-storestack [22.613306411896403 -10.666850836772156 -8.37873580587685 0.636571204028165 -9.57132745445837 -34.06069282020927] \C -992.0265395627775 :string-shatter) 2607 #push.type.definitions.interval.Interval{:min -137, :max 326.15897320671195, :min-open? false, :max-open? false} :chars-pt-crossover :refs-portion 12 2 :ref-swap :refs-take -3096.733996692833 #push.type.definitions.interval.Interval{:min -253, :max 149.48186235620983, :min-open? false, :max-open? false} :scalars-echo :chars-vfilter :tagspace-valuevector :set-later :refs-return-pop :set-yankdup :generator-storestack :code-cons :complexes-distinct :booleans-return-pop :refs-distinct :tagspace-tidy :exec-if false #push.type.definitions.interval.Interval{:min -224, :max 131.85866908567414, :min-open? false, :max-open? false} \m :vector->set :generator-totalistic3 -1377N :vector-shatter "Ngqre-+npx" :refs-savestack :s :ref-dump false :scalar-max :refs-yankdup :code-nth :intervals-flipstack -4320 :push-refcycler :chars-sampler 3.4820675952747866 [-47.692872347801604 -43.49213250096798 -46.75150104704431 -47.67225278216639 4.02855343163241 -21.851413274375886 15.391176715526228] :booleans-savestack :code-notequal? 389/22 :scalar-cutstack :scalar-save false :complex-cutflip :strings-yankdup :interval-include? :vector-liftstack :complexes-return-pop :code-null? :string-dup :snapshot-swap :char->string -5021.9416731249075M :ref-tagstack [-38.35422358847816] :chars-set :string-flush :strings-echo :generator-jumpsome -43 :strings-nth :booleans-echoall :float-uniform (#push.type.definitions.interval.Interval{:min 112.37194524451911, :max 305, :min-open? false, :max-open? false} :complex-stackdepth :boolean-echoall 232/789 :k :scalars-storestack :vector-pt-crossover) :code-do :generator-reset #push.type.definitions.complex.Complex{:re 4, :im 3} :intervals-print -1936 #push.type.definitions.complex.Complex{:re 0, :im -4/7} :exec-cutflip 4 :snapshot-liftstack :complex-swap :boolean-return :tagspace-new :complexes-pop :snapshot-stackdepth :tagspace-count -250/159 :complex-equal? :string-conjchar :interval-conj-set :complexes-replacefirst 13974.579070352142M "1MLjPiBP=\"" :exec-yank -337/593 0 :complexes-contains? :exec-later :boolean-cutstack :code-empty? [-8 -8] 10.09369980338127 :booleans-pt-crossover :chars-byexample :booleans-equal? :exec-liftstack :chars-vremove 3/13 1.2963353321602886 11982.282718382608M :refs-nth :tagspace-lookup :string-store :string->chars [7 -11 11 -23 -15 20 6 31 5] :chars-echoall -31 4.788455774964813 :o :complexes-fillvector :string->set 37691.68645694379M :string-savestack :booleans-equal? :chars-generalizeall 4832.411117204483 -31525N :string-min :complex-scale :vector-refilter :code-reduce :booleans-length -890.1874088550403 :scalars-emptyitem? :refs-stackdepth 25 :chars-flipstack :snapshot-storestack 41965N :strings-return :complex-make -3.790362442066625 :scalars-yank (:generator-echoall #push.type.definitions.complex.Complex{:re -3/2, :im 5/12}) :intervals-vfilter [-32.35716718023336 5.1979186893572376 44.71729361639861 -1.2974971051690218 -39.30154700467029 40.61536390083863 -32.672802369091215 -41.704436423787186] :exec-do*while :set-cutstack #push.type.definitions.interval.Interval{:min -289.69545788370465, :max 21, :min-open? false, :max-open? false} 2389 :s -29250.239562519208M \b :string-nth :refs-replacefirst 4 :strings-flipstack :vector-fillvector :scalars-shove 3 [13.839992754441823 -2.8839352194566104 11.018954929562732] :code-do* :tagspace-valueset :snapshot-savestack 0 :complexes-build -3.9136917618872866 :booleans-later :r :refs-new 740 :strings-build -3916.7373536842933 :strings-storestack :char-as-set :tagspace-lookupvector :set-rerunall :push-quoterefs :ref-store 828.3262667857889 :strings-storestack (:booleans-rotate :strings-store 10 "fX[hhc^fy" 71/18) :complexes-do*each :chars-build :refs-nth :refs-pt-crossover], :bindings {:OUTPUT nil, :e :set-stackdepth, :g :intervals-echoall, :c "4gSSOIV-7%", :j :exec-later, :h [-42 0], :b 2171, :d #push.type.definitions.complex.Complex{:re -4, :im 0}, :f #push.type.definitions.complex.Complex{:re -4, :im 1}, :i \K, :a :string-notequal?}}